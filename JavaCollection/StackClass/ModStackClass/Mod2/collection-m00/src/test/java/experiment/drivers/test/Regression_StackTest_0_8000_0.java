package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_StackTest_0_8000_0 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0001");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = stackTestDriver0.push(obj4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0002");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0003");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0004");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.push(obj6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0005");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0006");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0007");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Class<?> wildcardClass5 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0008");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0009");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0010");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0011");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0012");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0013");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0014");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0015");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0016");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0017");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass7 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0018");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0019");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0020");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = stackTestDriver0.push(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0021");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0022");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass11 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0023");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj55 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass56 = stackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0024");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0025");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass28 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0026");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0027");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0.0d + "'", obj8, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0028");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0029");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0030");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0031");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj1 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0032");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0033");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Class<?> wildcardClass16 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0034");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0035");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0036");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Class<?> wildcardClass13 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0037");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0038");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0039");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass54 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0040");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0041");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0042");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0043");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0044");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj76 = stackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver51.push(obj84);
        java.lang.Object obj86 = stackTestDriver0.push(obj85);
        java.lang.Object obj87 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0045");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Class<?> wildcardClass55 = stackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0046");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0047");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0048");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0049");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0050");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0051");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj85 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = stackTestDriver60.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0052");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj85 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass86 = stackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0053");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass13 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0054");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0055");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        java.lang.Class<?> wildcardClass48 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0056");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0057");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass69 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0058");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass19 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0059");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        java.lang.Object obj17 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0060");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0061");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver2 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj4 = stackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = stackTestDriver2.getClass();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) stackTestDriver2);
        stackTestDriver2.clear();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0062");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0063");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0064");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0065");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0066");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj17 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0067");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj58 = stackTestDriver24.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = stackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0068");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0069");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0070");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0071");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0072");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = stackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0073");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0074");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass55 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0075");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver55.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj67 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver60.getClass();
        java.lang.Object obj69 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj70 = stackTestDriver30.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj71 = stackTestDriver10.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass72 = stackTestDriver30.getClass();
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) wildcardClass72);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0076");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0077");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        java.lang.Object obj21 = stackTestDriver1.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0078");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver14);
        stackTestDriver14.clear();
        java.lang.Class<?> wildcardClass31 = stackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0079");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver55.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj67 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver60.getClass();
        java.lang.Object obj69 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj70 = stackTestDriver30.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj71 = stackTestDriver10.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass72 = stackTestDriver30.getClass();
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) wildcardClass72);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass75 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0080");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver41.push(obj47);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj64 = stackTestDriver41.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver66.pop();
        java.lang.Object obj86 = stackTestDriver41.push(obj85);
        java.lang.Object obj87 = stackTestDriver22.push(obj86);
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0081");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0082");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        java.lang.Class<?> wildcardClass32 = stackTestDriver17.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0083");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0084");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        java.lang.Object obj28 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver29.push(obj40);
        java.lang.Object obj42 = stackTestDriver6.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver6.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass50 = stackTestDriver43.getClass();
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0085");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0086");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0087");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0088");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver20.push((java.lang.Object) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0089");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0090");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0091");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0092");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver31.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj58 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj72 = stackTestDriver31.push(obj71);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0093");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass28 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0094");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0095");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0096");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        java.lang.Class<?> wildcardClass21 = stackTestDriver6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0097");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0098");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0099");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0100");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0101");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver41.push(obj47);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj64 = stackTestDriver41.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver66.pop();
        java.lang.Object obj86 = stackTestDriver41.push(obj85);
        java.lang.Object obj87 = stackTestDriver22.push(obj86);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0102");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.push(obj10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0103");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver20.push((java.lang.Object) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0104");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Class<?> wildcardClass44 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0105");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass78 = stackTestDriver26.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0106");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj46 = stackTestDriver21.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver55.push(obj61);
        java.lang.Object obj64 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        java.lang.Object obj71 = stackTestDriver65.push((java.lang.Object) 100L);
        java.lang.Object obj73 = stackTestDriver65.push((java.lang.Object) false);
        java.lang.Object obj74 = stackTestDriver65.pop();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver65.push(obj79);
        java.lang.Object obj81 = stackTestDriver55.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj82 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        experiment.drivers.StackTestDriver stackTestDriver91 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj93 = stackTestDriver91.push((java.lang.Object) 1.0f);
        java.lang.Object obj94 = stackTestDriver91.pop();
        java.lang.Object obj95 = stackTestDriver83.push((java.lang.Object) stackTestDriver91);
        java.lang.Object obj96 = stackTestDriver55.push(obj95);
        java.lang.Object obj97 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj98 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj99 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 1.0f + "'", obj94, 1.0f);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0107");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver0.push(obj16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0108");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0109");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0110");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0111");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver12.push(obj18);
        java.lang.Object obj21 = stackTestDriver12.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver22.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj35 = stackTestDriver12.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = stackTestDriver44.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj66 = stackTestDriver12.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj67 = stackTestDriver44.pop();
        java.lang.Object obj68 = stackTestDriver5.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver5.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj75 = stackTestDriver0.push(obj74);
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0112");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0113");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0114");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0115");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Class<?> wildcardClass20 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0116");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj75 = stackTestDriver15.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0117");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver14);
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0118");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Class<?> wildcardClass65 = stackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0119");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = stackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0120");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Class<?> wildcardClass31 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0121");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) "");
        java.lang.Object obj84 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        stackTestDriver78.clear();
        java.lang.Object obj87 = stackTestDriver71.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj88 = stackTestDriver71.pop();
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0122");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0123");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass24 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0124");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass43 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0125");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass97 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0d + "'", obj96, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0126");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver85.pop();
        java.lang.Object obj90 = stackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj92 = stackTestDriver80.pop();
        java.lang.Object obj93 = stackTestDriver0.push(obj92);
        java.lang.Class<?> wildcardClass94 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0127");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0128");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver25.clear();
        java.lang.Class<?> wildcardClass46 = stackTestDriver25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0129");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0130");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0131");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver28.push(obj34);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver38.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj51 = stackTestDriver28.push(obj50);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver28.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0132");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass5 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0133");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0134");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0135");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0136");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver63.getClass();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0137");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass54 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0138");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver1.push(obj21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0139");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0140");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Class<?> wildcardClass51 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0141");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0142");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        java.lang.Object obj28 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver29.push(obj40);
        java.lang.Object obj42 = stackTestDriver6.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver6.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass50 = stackTestDriver43.getClass();
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0143");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0144");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0145");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0146");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver58.pop();
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver58.push(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0147");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass6 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0148");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0149");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0150");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver28.push(obj34);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver38.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj51 = stackTestDriver28.push(obj50);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver28.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj84 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0151");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = stackTestDriver60.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver60.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj71 = stackTestDriver60.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0152");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0153");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver44.push(obj64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0154");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0155");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass15 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0156");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0157");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0158");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = stackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0159");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass22 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0160");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0161");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver85.pop();
        java.lang.Object obj90 = stackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj92 = stackTestDriver80.pop();
        java.lang.Object obj93 = stackTestDriver0.push(obj92);
        java.lang.Class<?> wildcardClass94 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0162");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        stackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0163");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Class<?> wildcardClass68 = stackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0164");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Object obj70 = stackTestDriver15.pop();
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = stackTestDriver15.push(obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0165");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj15 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 10.0f + "'", obj15, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0166");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass64 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0167");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver59.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj82 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        java.lang.Object obj89 = stackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        stackTestDriver83.clear();
        java.lang.Object obj95 = stackTestDriver43.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj96 = stackTestDriver37.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj97 = stackTestDriver0.push(obj96);
        java.lang.Object obj98 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass99 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0168");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass20 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0169");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0170");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0171");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj25 = stackTestDriver0.push(obj24);
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0172");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        java.lang.Class<?> wildcardClass38 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0173");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0174");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver21.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj33 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass34 = stackTestDriver26.getClass();
        java.lang.Object obj35 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj36 = stackTestDriver17.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj37 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver38.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj75 = stackTestDriver68.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver68.getClass();
        java.lang.Object obj77 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj78 = stackTestDriver38.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj79 = stackTestDriver18.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass80 = stackTestDriver38.getClass();
        java.lang.Object obj81 = stackTestDriver8.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver0.push(obj81);
        java.lang.Object obj83 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0175");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Class<?> wildcardClass42 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0176");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0177");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0178");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0179");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver43.push(obj49);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = stackTestDriver53.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver53.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj66 = stackTestDriver43.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        experiment.drivers.StackTestDriver stackTestDriver91 = new experiment.drivers.StackTestDriver();
        stackTestDriver91.clear();
        java.lang.Object obj93 = new java.lang.Object();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        java.lang.Object obj95 = stackTestDriver91.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = stackTestDriver75.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj97 = stackTestDriver43.push((java.lang.Object) stackTestDriver75);
        java.lang.Object obj98 = stackTestDriver75.pop();
        java.lang.Object obj99 = stackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.Object");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0180");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        stackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0181");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0182");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass70 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0183");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0184");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0185");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = stackTestDriver76.push((java.lang.Object) stackTestDriver81);
        java.lang.Object obj88 = stackTestDriver81.pop();
        java.lang.Class<?> wildcardClass89 = stackTestDriver81.getClass();
        java.lang.Object obj90 = stackTestDriver73.push((java.lang.Object) stackTestDriver81);
        java.lang.Object obj91 = stackTestDriver72.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj92 = stackTestDriver63.push(obj91);
        java.lang.Object obj93 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass94 = stackTestDriver63.getClass();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0186");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass18 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0187");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver8.push(obj51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0188");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0189");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Class<?> wildcardClass63 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0190");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0191");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj67 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        stackTestDriver43.clear();
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver43.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0192");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        java.lang.Object obj18 = stackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = stackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj21 = stackTestDriver12.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver12.push(obj26);
        java.lang.Object obj28 = stackTestDriver7.push(obj26);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass45 = stackTestDriver37.getClass();
        java.lang.Object obj46 = stackTestDriver29.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj47 = stackTestDriver7.push((java.lang.Object) stackTestDriver29);
        java.lang.Class<?> wildcardClass48 = stackTestDriver7.getClass();
        java.lang.Object obj49 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0193");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        java.lang.Object obj48 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass49 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0194");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0195");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) (byte) -1);
        stackTestDriver13.clear();
        java.lang.Object obj26 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = stackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) -1 + "'", obj24, (byte) -1);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0196");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0197");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass68 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0198");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass96 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0199");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0200");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0201");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass24 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0202");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass41 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0203");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0204");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0205");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass96 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0206");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        java.lang.Class<?> wildcardClass68 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0207");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj49 = stackTestDriver33.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver50.push(obj61);
        java.lang.Object obj63 = stackTestDriver33.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj67 = stackTestDriver10.pop();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass69 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0208");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver67.getClass();
        java.lang.Object obj92 = stackTestDriver42.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj93 = stackTestDriver16.push(obj92);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0209");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver54.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj81 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj95 = stackTestDriver54.push(obj94);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = stackTestDriver0.push(obj95);
        java.lang.Object obj98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = stackTestDriver0.push(obj98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0210");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver26.push(obj37);
        java.lang.Class<?> wildcardClass39 = stackTestDriver26.getClass();
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver26);
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass42 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0211");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0212");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        java.lang.Object obj28 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver29.push(obj40);
        java.lang.Object obj42 = stackTestDriver6.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver6.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass50 = stackTestDriver43.getClass();
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver43);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0213");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0214");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass93 = stackTestDriver41.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0215");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass12 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0216");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0217");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0218");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj81 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj83 = stackTestDriver75.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj88 = stackTestDriver33.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass89 = stackTestDriver75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0219");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj67 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        stackTestDriver43.clear();
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver43.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0220");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass98 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0221");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0222");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = stackTestDriver20.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0d + "'", obj27, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0223");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Class<?> wildcardClass39 = stackTestDriver24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0224");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Object obj63 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0225");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass41 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0226");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        java.lang.Object obj24 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver51.push(obj65);
        java.lang.Object obj67 = stackTestDriver46.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass84 = stackTestDriver76.getClass();
        java.lang.Object obj85 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj86 = stackTestDriver46.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj87 = stackTestDriver26.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj88 = stackTestDriver46.pop();
        java.lang.Object obj89 = stackTestDriver46.pop();
        java.lang.Object obj90 = stackTestDriver1.push(obj89);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0227");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0228");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0229");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0230");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver15.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass53 = stackTestDriver30.getClass();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0231");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass43 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0232");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver64.push(obj70);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = stackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = stackTestDriver74.pop();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver74.push(obj88);
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass91 = stackTestDriver74.getClass();
        java.lang.Object obj92 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass94 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0233");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0234");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass11 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0235");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        java.lang.Class<?> wildcardClass20 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0236");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver14.clear();
        java.lang.Object obj67 = stackTestDriver14.push((java.lang.Object) 10L);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10L + "'", obj67, 10L);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0237");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        java.lang.Object obj50 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver28.push(obj62);
        java.lang.Class<?> wildcardClass65 = stackTestDriver28.getClass();
        java.lang.Object obj66 = stackTestDriver15.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass68 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0238");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Object obj64 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0239");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0240");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass58 = stackTestDriver55.getClass();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj60 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Class<?> wildcardClass61 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0241");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        java.lang.Object obj9 = stackTestDriver4.push((java.lang.Object) "");
        java.lang.Object obj10 = stackTestDriver4.pop();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver11.push(obj17);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj34 = stackTestDriver11.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = stackTestDriver11.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj66 = stackTestDriver43.pop();
        java.lang.Object obj67 = stackTestDriver4.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj68 = stackTestDriver0.push(obj67);
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "" + "'", obj9, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0242");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        java.lang.Class<?> wildcardClass64 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0243");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass57 = stackTestDriver33.getClass();
        java.lang.Object obj58 = stackTestDriver8.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass59 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0244");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass56 = stackTestDriver40.getClass();
        java.lang.Object obj57 = stackTestDriver25.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0245");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver58);
        java.lang.Class<?> wildcardClass64 = stackTestDriver58.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0246");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0247");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass14 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0248");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj75 = stackTestDriver59.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver76.push(obj87);
        java.lang.Object obj89 = stackTestDriver59.push((java.lang.Object) stackTestDriver76);
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver76);
        java.lang.Class<?> wildcardClass92 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0249");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0250");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0251");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0252");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass50 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0253");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0254");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        java.lang.Object obj18 = stackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = stackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj21 = stackTestDriver12.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver12.push(obj26);
        java.lang.Object obj28 = stackTestDriver7.push(obj26);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass45 = stackTestDriver37.getClass();
        java.lang.Object obj46 = stackTestDriver29.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj47 = stackTestDriver7.push((java.lang.Object) stackTestDriver29);
        java.lang.Class<?> wildcardClass48 = stackTestDriver7.getClass();
        java.lang.Object obj49 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Class<?> wildcardClass50 = stackTestDriver7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0255");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0256");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass51 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0257");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0258");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver9.push((java.lang.Object) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0259");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver0.push(obj21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0260");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj22 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass23 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0261");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver21.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj33 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass34 = stackTestDriver26.getClass();
        java.lang.Object obj35 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj36 = stackTestDriver17.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj37 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver38.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj75 = stackTestDriver68.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver68.getClass();
        java.lang.Object obj77 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj78 = stackTestDriver38.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj79 = stackTestDriver18.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass80 = stackTestDriver38.getClass();
        java.lang.Object obj81 = stackTestDriver8.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver0.push(obj81);
        java.lang.Class<?> wildcardClass83 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0262");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0263");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        java.lang.Object obj68 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0264");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj86 = stackTestDriver66.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        java.lang.Object obj96 = stackTestDriver66.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj97 = stackTestDriver21.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj98 = stackTestDriver21.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) -1 + "'", obj86, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0265");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0266");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0267");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 1.0d);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver29.push(obj35);
        java.lang.Object obj38 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver29.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj56 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj69 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj70 = stackTestDriver29.push(obj69);
        java.lang.Object obj71 = stackTestDriver21.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        stackTestDriver72.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver72.getClass();
        java.lang.Object obj79 = stackTestDriver21.push((java.lang.Object) wildcardClass78);
        stackTestDriver21.clear();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0d + "'", obj27, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0268");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj49 = stackTestDriver33.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver50.push(obj61);
        java.lang.Object obj63 = stackTestDriver33.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj67 = stackTestDriver10.pop();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass69 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0269");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Class<?> wildcardClass85 = stackTestDriver69.getClass();
        java.lang.Object obj86 = stackTestDriver54.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj87 = stackTestDriver38.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver38.push((java.lang.Object) stackTestDriver88);
        java.lang.Object obj94 = stackTestDriver15.push(obj93);
        java.lang.Class<?> wildcardClass95 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0270");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj75 = stackTestDriver59.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver76.push(obj87);
        java.lang.Object obj89 = stackTestDriver59.push((java.lang.Object) stackTestDriver76);
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = stackTestDriver76.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0271");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Object obj54 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0272");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver59.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj82 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        java.lang.Object obj89 = stackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        stackTestDriver83.clear();
        java.lang.Object obj95 = stackTestDriver43.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj96 = stackTestDriver37.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj97 = stackTestDriver0.push(obj96);
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0273");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        java.lang.Object obj18 = stackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = stackTestDriver12.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = stackTestDriver27.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj66 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        java.lang.Object obj73 = stackTestDriver67.push((java.lang.Object) 100L);
        java.lang.Object obj75 = stackTestDriver67.push((java.lang.Object) false);
        java.lang.Object obj76 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        java.lang.Object obj79 = stackTestDriver27.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj80 = stackTestDriver21.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass81 = stackTestDriver27.getClass();
        java.lang.Object obj82 = stackTestDriver0.push((java.lang.Object) wildcardClass81);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass84 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + true + "'", obj26, true);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0d + "'", obj34, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0274");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0275");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        stackTestDriver41.clear();
        java.lang.Class<?> wildcardClass94 = stackTestDriver41.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0276");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0277");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj75 = stackTestDriver59.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver76.push(obj87);
        java.lang.Object obj89 = stackTestDriver59.push((java.lang.Object) stackTestDriver76);
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver76);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0278");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        java.lang.Class<?> wildcardClass77 = stackTestDriver70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0279");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj68 = stackTestDriver14.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0280");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass76 = stackTestDriver33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0281");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj35 = stackTestDriver5.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass36 = stackTestDriver30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0282");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        java.lang.Object obj9 = stackTestDriver4.push((java.lang.Object) "");
        java.lang.Object obj10 = stackTestDriver4.pop();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver11.push(obj17);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj34 = stackTestDriver11.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = stackTestDriver11.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj66 = stackTestDriver43.pop();
        java.lang.Object obj67 = stackTestDriver4.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj68 = stackTestDriver0.push(obj67);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "" + "'", obj9, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0283");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0284");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0285");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver70.push(obj76);
        java.lang.Object obj79 = stackTestDriver70.pop();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = stackTestDriver80.pop();
        java.lang.Object obj87 = stackTestDriver70.push(obj86);
        java.lang.Object obj88 = stackTestDriver70.pop();
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0286");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0287");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = stackTestDriver34.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj46 = stackTestDriver39.pop();
        java.lang.Class<?> wildcardClass47 = stackTestDriver39.getClass();
        java.lang.Object obj48 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver51.push(obj57);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        java.lang.Object obj67 = stackTestDriver61.push((java.lang.Object) 100L);
        java.lang.Object obj69 = stackTestDriver61.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj74 = stackTestDriver51.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = stackTestDriver79.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj91 = stackTestDriver84.pop();
        java.lang.Class<?> wildcardClass92 = stackTestDriver84.getClass();
        java.lang.Object obj93 = stackTestDriver76.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj94 = stackTestDriver75.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj95 = stackTestDriver76.pop();
        java.lang.Object obj96 = stackTestDriver51.push(obj95);
        java.lang.Class<?> wildcardClass97 = obj95.getClass();
        java.lang.Object obj98 = stackTestDriver31.push(obj95);
        java.lang.Object obj99 = stackTestDriver0.push(obj95);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "" + "'", obj91, "");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0288");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0289");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj33 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0290");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Class<?> wildcardClass41 = stackTestDriver39.getClass();
        java.lang.Object obj42 = stackTestDriver15.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj43 = stackTestDriver8.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver44.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj83 = stackTestDriver39.push(obj82);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0d + "'", obj51, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0291");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj41 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = stackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj51 = stackTestDriver42.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver42.push(obj56);
        java.lang.Object obj58 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver42.getClass();
        java.lang.Object obj61 = stackTestDriver22.push((java.lang.Object) stackTestDriver42);
        java.lang.Class<?> wildcardClass62 = stackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0292");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Class<?> wildcardClass17 = stackTestDriver16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0293");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver31.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj58 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj72 = stackTestDriver31.push(obj71);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Object obj74 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0294");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        stackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver39.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0295");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = stackTestDriver0.pop();
        java.lang.Object obj27 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0296");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0297");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver80.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0298");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver37.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj49 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass50 = stackTestDriver42.getClass();
        java.lang.Object obj51 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj52 = stackTestDriver33.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj53 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver59.push((java.lang.Object) 100L);
        java.lang.Object obj67 = stackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj68 = stackTestDriver59.pop();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver59.push(obj73);
        java.lang.Object obj75 = stackTestDriver54.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = stackTestDriver79.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj91 = stackTestDriver84.pop();
        java.lang.Class<?> wildcardClass92 = stackTestDriver84.getClass();
        java.lang.Object obj93 = stackTestDriver76.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj95 = stackTestDriver34.push((java.lang.Object) stackTestDriver54);
        java.lang.Class<?> wildcardClass96 = stackTestDriver54.getClass();
        java.lang.Object obj97 = stackTestDriver24.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj99 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "" + "'", obj91, "");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0299");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver64.push(obj70);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = stackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = stackTestDriver74.pop();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver74.push(obj88);
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass91 = stackTestDriver74.getClass();
        java.lang.Object obj92 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0300");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass33 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0301");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj41 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = stackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj51 = stackTestDriver42.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver42.push(obj56);
        java.lang.Object obj58 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver42.getClass();
        java.lang.Object obj61 = stackTestDriver22.push((java.lang.Object) stackTestDriver42);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0302");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0303");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0304");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Class<?> wildcardClass63 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0305");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass30 = stackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0306");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0307");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver35.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj47 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass48 = stackTestDriver40.getClass();
        java.lang.Object obj49 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj50 = stackTestDriver31.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj51 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver52.push(obj71);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver52.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver32.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj94 = stackTestDriver32.pop();
        java.lang.Object obj95 = stackTestDriver25.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0308");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 1.0d);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver29.push(obj35);
        java.lang.Object obj38 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver29.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj56 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj69 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj70 = stackTestDriver29.push(obj69);
        java.lang.Object obj71 = stackTestDriver21.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        stackTestDriver72.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver72.getClass();
        java.lang.Object obj79 = stackTestDriver21.push((java.lang.Object) wildcardClass78);
        stackTestDriver21.clear();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0d + "'", obj27, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0309");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj55 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0310");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj86 = stackTestDriver66.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        stackTestDriver87.clear();
        java.lang.Object obj96 = stackTestDriver66.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj97 = stackTestDriver21.push((java.lang.Object) stackTestDriver66);
        java.lang.Class<?> wildcardClass98 = stackTestDriver66.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) -1 + "'", obj86, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0311");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0312");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        java.lang.Object obj38 = stackTestDriver0.push(obj37);
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = stackTestDriver0.push(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0313");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = stackTestDriver55.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0314");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj47 = stackTestDriver0.push((java.lang.Object) (-1));
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1) + "'", obj47, (-1));
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0315");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass45 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0316");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0317");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        java.lang.Object obj61 = stackTestDriver45.push(obj60);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj64 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj65 = stackTestDriver37.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver37.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0318");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver15.push(obj30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0319");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0320");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj33 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0321");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj64 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0322");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = stackTestDriver60.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver60.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass71 = stackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0323");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Class<?> wildcardClass39 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0324");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0325");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver64.push(obj70);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        java.lang.Object obj80 = stackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = stackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = stackTestDriver74.pop();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver74.push(obj88);
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass91 = stackTestDriver74.getClass();
        java.lang.Object obj92 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0326");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver85.pop();
        java.lang.Object obj90 = stackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj92 = stackTestDriver80.pop();
        java.lang.Object obj93 = stackTestDriver0.push(obj92);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0327");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj22 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0328");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0329");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0330");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj45 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0331");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver39.push(obj50);
        java.lang.Class<?> wildcardClass52 = stackTestDriver39.getClass();
        java.lang.Object obj53 = stackTestDriver24.push((java.lang.Object) wildcardClass52);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver55.push(obj61);
        java.lang.Object obj64 = stackTestDriver55.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver65.pop();
        java.lang.Object obj72 = stackTestDriver55.push(obj71);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj77 = stackTestDriver55.push((java.lang.Object) 1L);
        java.lang.Object obj78 = stackTestDriver24.push((java.lang.Object) 1L);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1L + "'", obj77, 1L);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1L + "'", obj78, 1L);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0332");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass56 = stackTestDriver40.getClass();
        java.lang.Object obj57 = stackTestDriver25.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass59 = stackTestDriver40.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0333");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0334");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass13 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0335");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj41 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0336");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = stackTestDriver25.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0337");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        java.lang.Class<?> wildcardClass80 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0338");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj17 = stackTestDriver6.push((java.lang.Object) (byte) -1);
        java.lang.Object obj18 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver34.push(obj68);
        java.lang.Class<?> wildcardClass71 = stackTestDriver34.getClass();
        java.lang.Object obj72 = stackTestDriver21.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj73 = stackTestDriver6.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) -1 + "'", obj17, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) -1 + "'", obj18, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0339");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        java.lang.Object obj91 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Short");
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0340");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver32.getClass();
        java.lang.Object obj39 = stackTestDriver8.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver40.pop();
        java.lang.Object obj56 = stackTestDriver32.push(obj55);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0341");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0342");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0343");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0344");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver54.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj81 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj95 = stackTestDriver54.push(obj94);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = stackTestDriver0.push(obj95);
        java.lang.Class<?> wildcardClass98 = obj95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0345");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        java.lang.Object obj48 = stackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0346");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0347");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        java.lang.Class<?> wildcardClass34 = stackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0348");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass57 = stackTestDriver40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0349");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver59.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj82 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        java.lang.Object obj89 = stackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        stackTestDriver83.clear();
        java.lang.Object obj95 = stackTestDriver43.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj96 = stackTestDriver37.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj97 = stackTestDriver0.push(obj96);
        java.lang.Object obj98 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0350");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0351");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Class<?> wildcardClass22 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0352");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0353");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj50 = stackTestDriver37.pop();
        java.lang.Object obj51 = stackTestDriver37.pop();
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0354");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0355");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass57 = stackTestDriver33.getClass();
        java.lang.Object obj58 = stackTestDriver8.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj59 = stackTestDriver33.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0356");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = stackTestDriver24.push((java.lang.Object) 10.0f);
        java.lang.Object obj32 = stackTestDriver18.push((java.lang.Object) 10.0f);
        java.lang.Object obj33 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver18.push((java.lang.Object) wildcardClass37);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        java.lang.Object obj64 = stackTestDriver57.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Class<?> wildcardClass67 = stackTestDriver43.getClass();
        java.lang.Object obj68 = stackTestDriver18.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj69 = stackTestDriver0.push(obj68);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0357");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0358");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj74 = stackTestDriver67.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver61.push((java.lang.Object) 10.0f);
        java.lang.Object obj76 = stackTestDriver53.push((java.lang.Object) stackTestDriver61);
        stackTestDriver53.clear();
        java.lang.Object obj78 = stackTestDriver41.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj79 = stackTestDriver27.push(obj78);
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10.0f + "'", obj75, 10.0f);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0359");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0360");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass8 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0361");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0362");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0363");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0364");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        java.lang.Object obj18 = stackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = stackTestDriver12.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = stackTestDriver27.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj66 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        java.lang.Object obj73 = stackTestDriver67.push((java.lang.Object) 100L);
        java.lang.Object obj75 = stackTestDriver67.push((java.lang.Object) false);
        java.lang.Object obj76 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        java.lang.Object obj79 = stackTestDriver27.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj80 = stackTestDriver21.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass81 = stackTestDriver27.getClass();
        java.lang.Object obj82 = stackTestDriver0.push((java.lang.Object) wildcardClass81);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + true + "'", obj26, true);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0d + "'", obj34, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0365");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj53 = stackTestDriver22.push((java.lang.Object) stackTestDriver43);
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0366");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0367");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj17 = stackTestDriver6.push((java.lang.Object) (byte) -1);
        java.lang.Object obj18 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver34.push(obj68);
        java.lang.Class<?> wildcardClass71 = stackTestDriver34.getClass();
        java.lang.Object obj72 = stackTestDriver21.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj73 = stackTestDriver6.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) -1 + "'", obj17, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) -1 + "'", obj18, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Class");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0368");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver58);
        java.lang.Class<?> wildcardClass64 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0369");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) stackTestDriver27);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj49 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj51 = stackTestDriver27.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0370");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0371");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj45 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0372");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass40 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0373");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0374");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass75 = stackTestDriver33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0375");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass72 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0376");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj34 = stackTestDriver16.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0377");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0378");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass93 = stackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0379");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Class<?> wildcardClass88 = stackTestDriver72.getClass();
        java.lang.Object obj89 = stackTestDriver57.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj90 = stackTestDriver41.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver17.push((java.lang.Object) wildcardClass91);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0380");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver37.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj49 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass50 = stackTestDriver42.getClass();
        java.lang.Object obj51 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj52 = stackTestDriver33.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj53 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver59.push((java.lang.Object) 100L);
        java.lang.Object obj67 = stackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj68 = stackTestDriver59.pop();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver59.push(obj73);
        java.lang.Object obj75 = stackTestDriver54.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = stackTestDriver79.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj91 = stackTestDriver84.pop();
        java.lang.Class<?> wildcardClass92 = stackTestDriver84.getClass();
        java.lang.Object obj93 = stackTestDriver76.push((java.lang.Object) stackTestDriver84);
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj95 = stackTestDriver34.push((java.lang.Object) stackTestDriver54);
        java.lang.Class<?> wildcardClass96 = stackTestDriver54.getClass();
        java.lang.Object obj97 = stackTestDriver24.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass96);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "" + "'", obj91, "");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0381");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0382");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0383");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj22 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0384");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        java.lang.Object obj85 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj87 = stackTestDriver79.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj90 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        stackTestDriver79.clear();
        java.lang.Object obj93 = stackTestDriver9.push((java.lang.Object) stackTestDriver79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = stackTestDriver79.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0385");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = stackTestDriver39.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass47 = stackTestDriver39.getClass();
        java.lang.Object obj48 = stackTestDriver16.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver0.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj62 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj86 = stackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = stackTestDriver84.pop();
        java.lang.Object obj89 = stackTestDriver84.push((java.lang.Object) (byte) 100);
        java.lang.Object obj91 = stackTestDriver84.push((java.lang.Object) 10.0f);
        java.lang.Object obj92 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver78);
        java.lang.Class<?> wildcardClass94 = stackTestDriver78.getClass();
        java.lang.Object obj95 = stackTestDriver63.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj96 = stackTestDriver63.pop();
        java.lang.Object obj97 = stackTestDriver58.push(obj96);
        java.lang.Object obj98 = stackTestDriver0.push(obj96);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0d + "'", obj46, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10.0f + "'", obj91, 10.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 10.0f + "'", obj92, 10.0f);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0386");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver10.push((java.lang.Object) stackTestDriver36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = stackTestDriver36.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0387");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj54 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Class<?> wildcardClass86 = stackTestDriver70.getClass();
        java.lang.Object obj87 = stackTestDriver55.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj88 = stackTestDriver55.pop();
        java.lang.Object obj89 = stackTestDriver50.push(obj88);
        java.lang.Object obj90 = stackTestDriver50.pop();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Class<?> wildcardClass92 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0388");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass43 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0389");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver68.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = stackTestDriver53.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass91 = stackTestDriver68.getClass();
        java.lang.Object obj92 = stackTestDriver38.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) wildcardClass91);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0390");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver46.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj59 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Class<?> wildcardClass62 = stackTestDriver46.getClass();
        java.lang.Object obj63 = stackTestDriver17.push((java.lang.Object) wildcardClass62);
        stackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0391");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass14 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0392");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0393");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj25 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass26 = stackTestDriver18.getClass();
        java.lang.Object obj27 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj28 = stackTestDriver9.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0394");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0d + "'", obj96, 0.0d);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0395");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        java.lang.Object obj25 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass67 = stackTestDriver26.getClass();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0396");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Class<?> wildcardClass41 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100.0f + "'", obj40, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0397");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0398");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        java.lang.Object obj24 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver51.push(obj65);
        java.lang.Object obj67 = stackTestDriver46.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass84 = stackTestDriver76.getClass();
        java.lang.Object obj85 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj86 = stackTestDriver46.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj87 = stackTestDriver26.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj88 = stackTestDriver46.pop();
        java.lang.Object obj89 = stackTestDriver46.pop();
        java.lang.Object obj90 = stackTestDriver1.push(obj89);
        java.lang.Class<?> wildcardClass91 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0399");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Class<?> wildcardClass54 = stackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0400");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        java.lang.Object obj65 = stackTestDriver49.push(obj64);
        java.lang.Object obj66 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = stackTestDriver49.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0401");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj17 = stackTestDriver6.push((java.lang.Object) (byte) -1);
        java.lang.Object obj18 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver34.push(obj68);
        java.lang.Class<?> wildcardClass71 = stackTestDriver34.getClass();
        java.lang.Object obj72 = stackTestDriver21.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj73 = stackTestDriver6.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        java.lang.Object obj99 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) -1 + "'", obj17, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) -1 + "'", obj18, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Class");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.Class");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0402");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0403");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj78 = stackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass80 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1 + "'", obj78, 1);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0404");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Object obj98 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0405");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj53 = stackTestDriver22.push((java.lang.Object) stackTestDriver43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = stackTestDriver43.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0406");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj68 = stackTestDriver46.push((java.lang.Object) (-1L));
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        stackTestDriver90.clear();
        stackTestDriver90.clear();
        java.lang.Class<?> wildcardClass96 = stackTestDriver90.getClass();
        java.lang.Object obj97 = stackTestDriver70.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj98 = stackTestDriver46.push(obj97);
        java.lang.Object obj99 = stackTestDriver37.push(obj97);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1L) + "'", obj68, (-1L));
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0407");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver23.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass35 = stackTestDriver28.getClass();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass37 = stackTestDriver28.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0408");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0409");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Object obj71 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0410");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0411");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver39.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0412");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass21 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0413");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        java.lang.Object obj49 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) (-1.0d));
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj66 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1.0d) + "'", obj64, (-1.0d));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0414");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Class<?> wildcardClass88 = stackTestDriver72.getClass();
        java.lang.Object obj89 = stackTestDriver57.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj90 = stackTestDriver41.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver17.push((java.lang.Object) wildcardClass91);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = stackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0415");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0416");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Object obj71 = stackTestDriver54.push(obj70);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj76 = stackTestDriver54.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj83 = stackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Object obj85 = stackTestDriver77.push((java.lang.Object) false);
        java.lang.Object obj86 = stackTestDriver77.pop();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver77.push(obj91);
        java.lang.Object obj93 = stackTestDriver77.pop();
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver77.pop();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = stackTestDriver77.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0417");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0418");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver18.push(obj29);
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver32.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        java.lang.Object obj75 = stackTestDriver32.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver69);
        java.lang.Class<?> wildcardClass78 = stackTestDriver69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0419");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass42 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0420");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        java.lang.Object obj24 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver51.push(obj65);
        java.lang.Object obj67 = stackTestDriver46.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass84 = stackTestDriver76.getClass();
        java.lang.Object obj85 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj86 = stackTestDriver46.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj87 = stackTestDriver26.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj88 = stackTestDriver46.pop();
        java.lang.Object obj89 = stackTestDriver46.pop();
        java.lang.Object obj90 = stackTestDriver1.push(obj89);
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0421");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver14);
        stackTestDriver5.clear();
        java.lang.Class<?> wildcardClass31 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0422");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0423");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        java.lang.Object obj49 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) (-1.0d));
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj66 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1.0d) + "'", obj64, (-1.0d));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0424");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0425");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 0.0f);
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        stackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj45 = stackTestDriver29.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver46.push(obj57);
        java.lang.Object obj59 = stackTestDriver29.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj60 = stackTestDriver22.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) (byte) 100);
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver61.push(obj72);
        java.lang.Class<?> wildcardClass74 = stackTestDriver61.getClass();
        java.lang.Object obj75 = stackTestDriver46.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver46);
        java.lang.Class<?> wildcardClass77 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0d + "'", obj28, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0426");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Class<?> wildcardClass94 = stackTestDriver76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0427");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver25.push(obj39);
        java.lang.Object obj41 = stackTestDriver20.push(obj39);
        java.lang.Object obj42 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver20.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0428");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Class<?> wildcardClass51 = stackTestDriver45.getClass();
        java.lang.Object obj52 = stackTestDriver25.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver1.push(obj52);
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0429");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj93 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = stackTestDriver22.push(obj95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0430");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0431");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0432");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        java.lang.Object obj14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver0.push(obj14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0433");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj17 = stackTestDriver6.push((java.lang.Object) (byte) -1);
        java.lang.Object obj18 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver34.push(obj68);
        java.lang.Class<?> wildcardClass71 = stackTestDriver34.getClass();
        java.lang.Object obj72 = stackTestDriver21.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj73 = stackTestDriver6.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) -1 + "'", obj17, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) -1 + "'", obj18, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0434");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver40.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0435");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0436");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = stackTestDriver26.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj65 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj72 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver66.push((java.lang.Object) false);
        java.lang.Object obj75 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj78 = stackTestDriver26.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj79 = stackTestDriver12.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj80 = stackTestDriver26.pop();
        java.lang.Object obj81 = stackTestDriver0.push(obj80);
        java.lang.Object obj82 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0d + "'", obj33, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0437");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        java.lang.Object obj38 = stackTestDriver0.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver39.push(obj45);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver49.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj62 = stackTestDriver39.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj83 = stackTestDriver64.pop();
        java.lang.Object obj84 = stackTestDriver39.push(obj83);
        stackTestDriver39.clear();
        java.lang.Object obj86 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass87 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0438");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver40.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver48.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = stackTestDriver32.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj71 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj84 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj85 = stackTestDriver18.push((java.lang.Object) stackTestDriver32);
        stackTestDriver18.clear();
        java.lang.Class<?> wildcardClass87 = stackTestDriver18.getClass();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0439");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj32 = stackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) stackTestDriver27);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj49 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj51 = stackTestDriver27.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj52 = stackTestDriver0.push(obj51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0440");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0441");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver32.getClass();
        java.lang.Object obj39 = stackTestDriver8.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0442");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        java.lang.Object obj25 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass67 = stackTestDriver26.getClass();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0443");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass75 = stackTestDriver68.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0444");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass29 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0445");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver9.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj21 = stackTestDriver9.pop();
        java.lang.Object obj22 = stackTestDriver0.push(obj21);
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0446");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Class<?> wildcardClass23 = stackTestDriver10.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj25 = stackTestDriver10.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0447");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj55 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass58 = stackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0448");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj77 = stackTestDriver26.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj78 = stackTestDriver0.push(obj77);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0449");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0450");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        java.lang.Object obj59 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0451");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0452");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        stackTestDriver1.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0453");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver24.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        java.lang.Class<?> wildcardClass63 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0454");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver23.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj41 = stackTestDriver23.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0455");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Object obj46 = stackTestDriver32.pop();
        java.lang.Object obj47 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj57 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0456");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass53 = stackTestDriver40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0457");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass33 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0458");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Object obj63 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0459");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0460");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj67 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        stackTestDriver43.clear();
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        java.lang.Class<?> wildcardClass70 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0461");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0462");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Object obj64 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj81 = stackTestDriver68.pop();
        java.lang.Object obj82 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver21.push((java.lang.Object) wildcardClass85);
        stackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0463");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0464");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        java.lang.Object obj25 = stackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0465");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver41.push((java.lang.Object) wildcardClass60);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver66.getClass();
        java.lang.Object obj91 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj92 = stackTestDriver22.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0466");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0467");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0468");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver46.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj59 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Class<?> wildcardClass62 = stackTestDriver46.getClass();
        java.lang.Object obj63 = stackTestDriver17.push((java.lang.Object) wildcardClass62);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj89 = stackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj90 = stackTestDriver64.pop();
        java.lang.Object obj91 = stackTestDriver17.push(obj90);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) 10 + "'", obj89, (short) 10);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (short) 10 + "'", obj90, (short) 10);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0469");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver63.getClass();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) wildcardClass70);
        stackTestDriver21.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = stackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0470");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0471");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass70 = stackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0472");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver44.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0473");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0474");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0475");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver40.push(obj54);
        java.lang.Object obj56 = stackTestDriver35.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = stackTestDriver60.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj72 = stackTestDriver65.pop();
        java.lang.Class<?> wildcardClass73 = stackTestDriver65.getClass();
        java.lang.Object obj74 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj75 = stackTestDriver35.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj76 = stackTestDriver20.push(obj75);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0476");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver58);
        stackTestDriver58.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver58.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0477");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        java.lang.Object obj51 = stackTestDriver45.push((java.lang.Object) 100L);
        java.lang.Object obj53 = stackTestDriver45.push((java.lang.Object) false);
        java.lang.Object obj54 = stackTestDriver45.pop();
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) (byte) -1);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        java.lang.Object obj60 = stackTestDriver17.push((java.lang.Object) stackTestDriver45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = stackTestDriver45.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) -1 + "'", obj56, (byte) -1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0478");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0479");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        java.lang.Object obj48 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0480");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        stackTestDriver9.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0481");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0482");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0483");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver15.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass53 = stackTestDriver30.getClass();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0484");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0485");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        stackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0486");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj71 = stackTestDriver55.push((java.lang.Object) stackTestDriver62);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        stackTestDriver72.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        stackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver79.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = stackTestDriver72.push(obj83);
        java.lang.Object obj85 = stackTestDriver55.push((java.lang.Object) stackTestDriver72);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj88 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver90.pop();
        java.lang.Object obj96 = stackTestDriver32.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj97 = stackTestDriver32.pop();
        java.lang.Object obj98 = stackTestDriver8.push(obj97);
        java.lang.Object obj99 = stackTestDriver8.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0487");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 1.0d);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver29.push(obj35);
        java.lang.Object obj38 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver29.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj56 = stackTestDriver29.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj69 = stackTestDriver57.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj70 = stackTestDriver29.push(obj69);
        java.lang.Object obj71 = stackTestDriver21.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        stackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = stackTestDriver72.push((java.lang.Object) wildcardClass75);
        stackTestDriver72.clear();
        java.lang.Class<?> wildcardClass78 = stackTestDriver72.getClass();
        java.lang.Object obj79 = stackTestDriver21.push((java.lang.Object) wildcardClass78);
        stackTestDriver21.clear();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = stackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0d + "'", obj27, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0488");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0489");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver85.pop();
        java.lang.Object obj90 = stackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj92 = stackTestDriver80.pop();
        java.lang.Object obj93 = stackTestDriver0.push(obj92);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass95 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0490");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver18.push(obj29);
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver32.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        java.lang.Object obj75 = stackTestDriver32.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = stackTestDriver69.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0491");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0492");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Class<?> wildcardClass14 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0493");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj94 = stackTestDriver54.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0494");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass98 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0495");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver58);
        stackTestDriver58.clear();
        java.lang.Object obj66 = stackTestDriver58.push((java.lang.Object) (byte) 10);
        stackTestDriver58.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 10 + "'", obj66, (byte) 10);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0496");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass44 = stackTestDriver20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0497");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0498");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj57 = stackTestDriver44.pop();
        java.lang.Object obj58 = stackTestDriver44.pop();
        java.lang.Object obj59 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver44.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = stackTestDriver44.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0499");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj25 = stackTestDriver0.push(obj24);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        java.lang.Object obj50 = stackTestDriver34.push((java.lang.Object) stackTestDriver41);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver34.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver27.push((java.lang.Object) stackTestDriver51);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = stackTestDriver27.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0d + "'", obj33, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_0.test0500");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass58 = stackTestDriver55.getClass();
        java.lang.Object obj59 = stackTestDriver53.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj60 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj61 = stackTestDriver55.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
    }
}

