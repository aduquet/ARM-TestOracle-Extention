package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_AlejaStackTest_0_8000_3 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1501");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = alejaStackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver23.push(obj29);
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver39.getClass();
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver12.push(obj47);
        java.lang.Object obj49 = alejaStackTestDriver12.pop();
        java.lang.Object obj50 = alejaStackTestDriver12.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj55 = alejaStackTestDriver52.push((java.lang.Object) (-1.0d));
        java.lang.Object obj56 = alejaStackTestDriver52.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) 10L);
        java.lang.Object obj71 = alejaStackTestDriver57.push((java.lang.Object) (short) -1);
        alejaStackTestDriver57.clear();
        java.lang.Object obj73 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj75 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0f) + "'", obj33, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1.0d) + "'", obj55, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1.0d) + "'", obj56, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) -1 + "'", obj71, (short) -1);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1502");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + '4' + "'", obj12, '4');
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1503");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        java.lang.Object obj13 = alejaStackTestDriver3.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver30.pop();
        java.lang.Object obj38 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) 0.0d);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass66);
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = alejaStackTestDriver54.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver46.push(obj75);
        java.lang.Object obj78 = alejaStackTestDriver30.push(obj75);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10L + "'", obj13, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1504");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver36.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver36.getClass();
        java.lang.Object obj51 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver27.push(obj51);
        java.lang.Object obj53 = alejaStackTestDriver0.push(obj51);
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1505");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj55 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        java.lang.Object obj66 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) (byte) 0);
        java.lang.Object obj69 = alejaStackTestDriver56.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        alejaStackTestDriver73.clear();
        alejaStackTestDriver73.clear();
        alejaStackTestDriver73.clear();
        java.lang.Object obj80 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        java.lang.Object obj84 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver56.getClass();
        java.lang.Object obj86 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass85);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 0 + "'", obj68, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 0 + "'", obj69, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1506");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1507");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1508");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver25.clear();
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1509");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = alejaStackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push(obj55);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver65.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver38.push(obj73);
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = alejaStackTestDriver38.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0f) + "'", obj59, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1510");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver20.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0d) + "'", obj25, (-1.0d));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1511");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver7.getClass();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver20.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Class<?> wildcardClass43 = alejaStackTestDriver36.getClass();
        java.lang.Object obj44 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver45.pop();
        java.lang.Object obj60 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver61.getClass();
        java.lang.Object obj68 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver72.clear();
        java.lang.Object obj85 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver69.clear();
        java.lang.Object obj87 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj88 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1.0f) + "'", obj30, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "hi!" + "'", obj52, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1512");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver29.push(obj35);
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver45.getClass();
        java.lang.Object obj53 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver54.pop();
        java.lang.Object obj69 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver70.getClass();
        java.lang.Object obj77 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver14.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver80.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver88);
        alejaStackTestDriver88.clear();
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver88.getClass();
        java.lang.Object obj96 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass95);
        java.lang.Object obj97 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "hi!" + "'", obj21, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "hi!" + "'", obj87, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1513");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass7);
        alejaStackTestDriver4.clear();
        alejaStackTestDriver4.clear();
        alejaStackTestDriver4.clear();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver13.clear();
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass31);
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver0.push(obj33);
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1514");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver30.getClass();
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj52 = alejaStackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = alejaStackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1.0f) + "'", obj56, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1515");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver12.getClass();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = alejaStackTestDriver29.pop();
        java.lang.Object obj43 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) 10L);
        java.lang.Object obj60 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj79 = alejaStackTestDriver66.push((java.lang.Object) (short) 1);
        java.lang.Object obj80 = alejaStackTestDriver61.push((java.lang.Object) (short) 1);
        alejaStackTestDriver61.clear();
        java.lang.Object obj82 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj84 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver47);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0d + "'", obj19, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10L + "'", obj59, 10L);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 1 + "'", obj79, (short) 1);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 1 + "'", obj80, (short) 1);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1516");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj32 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1517");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass7);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj16);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj45 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj47 = alejaStackTestDriver35.push((java.lang.Object) 10L);
        java.lang.Object obj49 = alejaStackTestDriver35.push((java.lang.Object) 0L);
        java.lang.Object obj50 = alejaStackTestDriver22.push(obj49);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj62 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver52.clear();
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver52.getClass();
        java.lang.Object obj65 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver68.push((java.lang.Object) 0.0d);
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj78 = alejaStackTestDriver68.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj89 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver79.clear();
        java.lang.Object obj92 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        alejaStackTestDriver79.clear();
        java.lang.Object obj94 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver79.getClass();
        java.lang.Object obj96 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj97 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver22);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 10L + "'", obj47, 10L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0L + "'", obj49, 0L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0L + "'", obj50, 0L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0.0d + "'", obj75, 0.0d);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + false + "'", obj78, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1518");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Object obj17 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) 10L);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj39 = alejaStackTestDriver7.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = alejaStackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10L + "'", obj34, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1519");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1520");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        java.lang.Object obj13 = alejaStackTestDriver3.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver30.pop();
        java.lang.Object obj38 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = alejaStackTestDriver30.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10L + "'", obj13, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1521");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver20.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver29.push(obj35);
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver45.getClass();
        java.lang.Object obj53 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver54.pop();
        java.lang.Object obj69 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver70.getClass();
        java.lang.Object obj77 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = alejaStackTestDriver20.push(obj77);
        alejaStackTestDriver20.clear();
        java.lang.Object obj81 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver20);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1522");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver38.clear();
        java.lang.Object obj51 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver35.clear();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver35.push(obj54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1523");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1524");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver21.pop();
        java.lang.Object obj29 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj31 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver21.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver49.pop();
        java.lang.Object obj57 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver62.clear();
        java.lang.Object obj75 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj76 = alejaStackTestDriver49.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver21.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver21.pop();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver21.getClass();
        java.lang.Object obj80 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj81 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1525");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver54.clear();
        java.lang.Object obj57 = alejaStackTestDriver54.push((java.lang.Object) (-1.0d));
        java.lang.Object obj58 = alejaStackTestDriver54.pop();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver54.getClass();
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0d) + "'", obj57, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (-1.0d) + "'", obj58, (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1526");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        java.lang.Object obj23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver8.push(obj23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1527");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) "hi!");
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver29.push(obj35);
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver45.getClass();
        java.lang.Object obj53 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver54.pop();
        java.lang.Object obj69 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) "");
        java.lang.Object obj81 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj82 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj83 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj84 = alejaStackTestDriver75.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver75.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1528");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver47.getClass();
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1529");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver7.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj21 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver22.push(obj28);
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver38.getClass();
        java.lang.Object obj46 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj61 = alejaStackTestDriver47.pop();
        java.lang.Object obj62 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver63.getClass();
        java.lang.Object obj70 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver7.push(obj70);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "hi!" + "'", obj14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (-1.0f) + "'", obj32, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1530");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj26 = alejaStackTestDriver18.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver27.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj50 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver7.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1 + "'", obj26, 1);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1531");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj26 = alejaStackTestDriver18.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver27.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj50 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1 + "'", obj26, 1);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1532");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) 10.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) '4');
        java.lang.Object obj40 = alejaStackTestDriver27.pop();
        java.lang.Object obj41 = alejaStackTestDriver0.push(obj40);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + '4' + "'", obj39, '4');
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + '4' + "'", obj40, '4');
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + '4' + "'", obj41, '4');
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1533");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver10.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver10.push(obj38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver51.push(obj57);
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver67.getClass();
        java.lang.Object obj75 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver40.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver10.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "hi!" + "'", obj17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1534");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = alejaStackTestDriver29.pop();
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj44 = alejaStackTestDriver0.push(obj43);
        java.lang.Object obj45 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1535");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 10L);
        java.lang.Object obj68 = alejaStackTestDriver54.push((java.lang.Object) 0L);
        java.lang.Object obj69 = alejaStackTestDriver41.push(obj68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj94 = alejaStackTestDriver0.pop();
        java.lang.Object obj95 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10L + "'", obj66, 10L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0L + "'", obj68, 0L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0L + "'", obj69, 0L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1536");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver3.pop();
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver3.push(obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1537");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1538");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver28.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver43.push(obj49);
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver59.getClass();
        java.lang.Object obj67 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass66);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver68.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj82 = alejaStackTestDriver68.pop();
        java.lang.Object obj83 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver84.getClass();
        java.lang.Object obj91 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver28.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj94 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1.0f) + "'", obj53, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "hi!" + "'", obj75, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1539");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Object obj5 = alejaStackTestDriver2.pop();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) '4');
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj33 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "hi!" + "'", obj9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1540");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj20 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj22 = alejaStackTestDriver10.push((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 0 + "'", obj22, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 0 + "'", obj23, (byte) 0);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1541");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj40 = alejaStackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = alejaStackTestDriver34.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) 10.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver71.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass81);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = alejaStackTestDriver85.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj91 = alejaStackTestDriver78.pop();
        java.lang.Object obj92 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj93 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj94 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver56.getClass();
        java.lang.Object obj97 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj98 = alejaStackTestDriver43.pop();
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "hi!" + "'", obj63, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1542");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver36.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj50 = alejaStackTestDriver36.pop();
        java.lang.Object obj51 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver36);
        alejaStackTestDriver36.clear();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj84 = alejaStackTestDriver72.push((java.lang.Object) '#');
        alejaStackTestDriver72.clear();
        java.lang.Object obj86 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1 + "'", obj9, 1);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 0 + "'", obj67, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + '#' + "'", obj84, '#');
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1543");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1544");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver47.getClass();
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver61.clear();
        java.lang.Object obj69 = alejaStackTestDriver61.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1 + "'", obj69, 1);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1545");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj48 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver7.push(obj51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1546");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver21.clear();
        java.lang.Object obj34 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver21.pop();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver53.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver60.pop();
        java.lang.Object obj74 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver86.clear();
        java.lang.Object obj88 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) 10L);
        java.lang.Object obj91 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10L + "'", obj90, 10L);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1547");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj22 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1548");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver28.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver43.push(obj49);
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver59.getClass();
        java.lang.Object obj67 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass66);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver68.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj82 = alejaStackTestDriver68.pop();
        java.lang.Object obj83 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver84.getClass();
        java.lang.Object obj91 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver28.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj94 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1.0f) + "'", obj53, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "hi!" + "'", obj75, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1549");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver25.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj38 = alejaStackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj74 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver42.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1 + "'", obj48, 1);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1550");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        java.lang.Object obj51 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver67.getClass();
        java.lang.Object obj77 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj79 = alejaStackTestDriver53.push((java.lang.Object) 1.0d);
        java.lang.Object obj80 = alejaStackTestDriver41.push((java.lang.Object) 1.0d);
        alejaStackTestDriver41.clear();
        java.lang.Object obj82 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver25.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0d + "'", obj79, 1.0d);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0d + "'", obj80, 1.0d);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1551");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver3.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1552");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) 10L);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver29.push((java.lang.Object) 0.0d);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver29.push(obj50);
        java.lang.Object obj52 = alejaStackTestDriver18.push(obj51);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver62.getClass();
        java.lang.Object obj73 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver62);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0d + "'", obj36, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1553");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver25.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj38 = alejaStackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj74 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = alejaStackTestDriver42.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1 + "'", obj48, 1);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1554");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver30.push((java.lang.Object) (short) 1);
        java.lang.Object obj44 = alejaStackTestDriver25.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) 10L);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = alejaStackTestDriver55.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 1 + "'", obj43, (short) 1);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 1 + "'", obj44, (short) 1);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0d) + "'", obj50, (-1.0d));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10L + "'", obj67, 10L);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1555");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj33 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj63 = alejaStackTestDriver34.push(obj62);
        java.lang.Object obj64 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        java.lang.Object obj71 = alejaStackTestDriver66.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver66.clear();
        java.lang.Object obj74 = alejaStackTestDriver66.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver75.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) wildcardClass85);
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver89.clear();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = alejaStackTestDriver89.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver82.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj95 = alejaStackTestDriver82.pop();
        java.lang.Object obj96 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj97 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj98 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj99 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0L + "'", obj14, 0L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "hi!" + "'", obj26, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "hi!" + "'", obj56, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1 + "'", obj74, 1);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1556");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1557");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) 0.0d);
        java.lang.Object obj51 = alejaStackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj52 = alejaStackTestDriver42.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        alejaStackTestDriver53.clear();
        java.lang.Object obj66 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj68 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj69 = alejaStackTestDriver42.pop();
        java.lang.Object obj70 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0.0d + "'", obj49, 0.0d);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1558");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj50 = alejaStackTestDriver47.push((java.lang.Object) (-1.0d));
        java.lang.Object obj51 = alejaStackTestDriver47.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj62 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) 10L);
        java.lang.Object obj66 = alejaStackTestDriver52.push((java.lang.Object) (short) -1);
        alejaStackTestDriver52.clear();
        java.lang.Object obj68 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver52);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0d) + "'", obj50, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1.0d) + "'", obj51, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10L + "'", obj64, 10L);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) -1 + "'", obj66, (short) -1);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1559");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver16.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1560");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        java.lang.Object obj15 = alejaStackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Float");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1561");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        java.lang.Object obj23 = alejaStackTestDriver8.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass34);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver40.clear();
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj54 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj55 = alejaStackTestDriver31.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver24.push(obj55);
        java.lang.Object obj58 = alejaStackTestDriver24.pop();
        java.lang.Object obj59 = alejaStackTestDriver8.push(obj58);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1562");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 0.0d);
        alejaStackTestDriver12.clear();
        java.lang.Object obj21 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0d + "'", obj19, 0.0d);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1563");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver23.clear();
        java.lang.Object obj36 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver37.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj58 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) "");
        java.lang.Object obj81 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver75);
        alejaStackTestDriver70.clear();
        java.lang.Object obj83 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj84 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj85 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj86 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj87 = alejaStackTestDriver23.pop();
        java.lang.Object obj88 = alejaStackTestDriver17.push(obj87);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1564");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver52.clear();
        java.lang.Object obj65 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass70);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj80 = alejaStackTestDriver67.pop();
        java.lang.Object obj81 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj82 = alejaStackTestDriver52.pop();
        java.lang.Object obj83 = alejaStackTestDriver0.push(obj82);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        alejaStackTestDriver85.clear();
        java.lang.Object obj91 = alejaStackTestDriver85.push((java.lang.Object) 100L);
        alejaStackTestDriver85.clear();
        alejaStackTestDriver85.clear();
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = alejaStackTestDriver85.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1565");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1566");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 10L);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj57 = alejaStackTestDriver44.push((java.lang.Object) (short) 1);
        java.lang.Object obj58 = alejaStackTestDriver39.push((java.lang.Object) (short) 1);
        alejaStackTestDriver39.clear();
        java.lang.Object obj60 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 1 + "'", obj57, (short) 1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 1 + "'", obj58, (short) 1);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1567");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) (short) 1);
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver27.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj62 = alejaStackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = alejaStackTestDriver56.push((java.lang.Object) false);
        java.lang.Object obj65 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj66 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj67 = alejaStackTestDriver12.push(obj66);
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver76.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver76.getClass();
        java.lang.Object obj91 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver69.getClass();
        java.lang.Object obj93 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver12.clear();
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 1 + "'", obj25, (short) 1);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1568");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj47 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj48 = alejaStackTestDriver24.pop();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver17.push(obj48);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0L + "'", obj14, 0L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1569");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver0.push(obj19);
        java.lang.Object obj22 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1570");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver21.clear();
        java.lang.Object obj34 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver21.pop();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj53 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1571");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj50 = alejaStackTestDriver11.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = alejaStackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver62.push(obj68);
        java.lang.Object obj72 = alejaStackTestDriver62.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        alejaStackTestDriver73.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        java.lang.Object obj83 = alejaStackTestDriver78.push((java.lang.Object) "");
        java.lang.Object obj84 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver78.getClass();
        java.lang.Object obj86 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver51.push(obj86);
        java.lang.Object obj88 = alejaStackTestDriver51.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        alejaStackTestDriver89.clear();
        java.lang.Object obj95 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver11.push(obj95);
        alejaStackTestDriver11.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1.0f) + "'", obj72, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1572");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1573");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 10L);
        java.lang.Object obj68 = alejaStackTestDriver54.push((java.lang.Object) 0L);
        java.lang.Object obj69 = alejaStackTestDriver41.push(obj68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj94 = alejaStackTestDriver0.pop();
        java.lang.Object obj95 = alejaStackTestDriver0.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10L + "'", obj66, 10L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0L + "'", obj68, 0L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0L + "'", obj69, 0L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1574");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1575");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1576");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 10L);
        java.lang.Object obj32 = alejaStackTestDriver18.push((java.lang.Object) (short) -1);
        java.lang.Object obj33 = alejaStackTestDriver18.pop();
        java.lang.Object obj34 = alejaStackTestDriver18.pop();
        java.lang.Object obj35 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10L + "'", obj30, 10L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) -1 + "'", obj32, (short) -1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) -1 + "'", obj33, (short) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10L + "'", obj34, 10L);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1577");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = alejaStackTestDriver26.push((java.lang.Object) 10.0f);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Object obj38 = alejaStackTestDriver26.push((java.lang.Object) '4');
        java.lang.Object obj39 = alejaStackTestDriver16.push(obj38);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj52 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver53.push((java.lang.Object) 0.0d);
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver53.push(obj74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj80 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) wildcardClass85);
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj92 = alejaStackTestDriver82.push((java.lang.Object) '4');
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj95 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj96 = alejaStackTestDriver45.pop();
        java.lang.Object obj97 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver45);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + '4' + "'", obj38, '4');
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + '4' + "'", obj39, '4');
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0.0d + "'", obj60, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + '4' + "'", obj92, '4');
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1578");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj19 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 10L);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj36 = alejaStackTestDriver20.push((java.lang.Object) 1.0d);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = alejaStackTestDriver56.pop();
        java.lang.Object obj70 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj71 = alejaStackTestDriver41.pop();
        java.lang.Object obj72 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj73 = alejaStackTestDriver12.push(obj72);
        java.lang.Object obj74 = alejaStackTestDriver12.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10L + "'", obj32, 10L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0d + "'", obj36, 1.0d);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1579");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver17.getClass();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver31.getClass();
        java.lang.Object obj46 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) (short) 1);
        java.lang.Object obj68 = alejaStackTestDriver49.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass79);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "hi!" + "'", obj38, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 1 + "'", obj67, (short) 1);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 1 + "'", obj68, (short) 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0d) + "'", obj74, (-1.0d));
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1580");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj40 = alejaStackTestDriver27.pop();
        java.lang.Object obj41 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver20.push(obj89);
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1581");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass9);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj30 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver31.push(obj37);
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver47.getClass();
        java.lang.Object obj55 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver56.pop();
        java.lang.Object obj71 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver72.getClass();
        java.lang.Object obj79 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj81 = alejaStackTestDriver6.pop();
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1.0f) + "'", obj41, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "hi!" + "'", obj63, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1582");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 10L);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver64.clear();
        java.lang.Object obj77 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj79 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj80 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10L + "'", obj44, 10L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1583");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver19.clear();
        java.lang.Object obj32 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1584");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver37.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "hi!" + "'", obj44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1585");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = alejaStackTestDriver24.push((java.lang.Object) false);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = alejaStackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj55 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver41.clear();
        java.lang.Object obj57 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver24.clear();
        java.lang.Object obj59 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj60 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1586");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Object obj20 = alejaStackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver28.getClass();
        java.lang.Object obj38 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj40 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj49 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + '4' + "'", obj12, '4');
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0d + "'", obj40, 1.0d);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1587");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver13.push(obj19);
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) "");
        java.lang.Object obj35 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver29.getClass();
        java.lang.Object obj37 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        java.lang.Object obj53 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj66 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver68.clear();
        java.lang.Object obj76 = alejaStackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj77 = alejaStackTestDriver68.pop();
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj80 = alejaStackTestDriver13.push(obj79);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0f) + "'", obj23, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1 + "'", obj76, 1);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1 + "'", obj77, 1);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1 + "'", obj79, 1);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1 + "'", obj80, 1);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1588");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver46.clear();
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver43.clear();
        java.lang.Object obj61 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj62 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver12.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver67.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj80 = alejaStackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = alejaStackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1589");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj46 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver35.push(obj47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 0 + "'", obj30, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1590");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        java.lang.Object obj23 = alejaStackTestDriver8.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) 0.0d);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = alejaStackTestDriver35.push(obj56);
        java.lang.Object obj58 = alejaStackTestDriver27.push(obj56);
        java.lang.Object obj59 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj60 = alejaStackTestDriver27.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0d + "'", obj42, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1591");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver25.clear();
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) (byte) 0);
        java.lang.Object obj56 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver43.push(obj61);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 0 + "'", obj55, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 0 + "'", obj56, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Class");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1592");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1593");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj61 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj62 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1594");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) (short) 1);
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) (short) 1);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) 0.0d);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = alejaStackTestDriver42.push(obj63);
        java.lang.Object obj65 = alejaStackTestDriver34.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver34.pop();
        java.lang.Object obj67 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj68 = alejaStackTestDriver0.push(obj67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj75 = alejaStackTestDriver69.push((java.lang.Object) 100L);
        java.lang.Object obj77 = alejaStackTestDriver69.push((java.lang.Object) false);
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = alejaStackTestDriver81.push((java.lang.Object) 10.0f);
        alejaStackTestDriver81.clear();
        alejaStackTestDriver81.clear();
        java.lang.Object obj91 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver69.getClass();
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver69);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 1 + "'", obj31, (short) 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 1 + "'", obj32, (short) 1);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0.0d + "'", obj49, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (-1.0f) + "'", obj79, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1595");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = alejaStackTestDriver18.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj39 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver32.getClass();
        java.lang.Object obj42 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj44 = alejaStackTestDriver18.push((java.lang.Object) 1.0d);
        java.lang.Object obj45 = alejaStackTestDriver6.push((java.lang.Object) 1.0d);
        java.lang.Object obj46 = alejaStackTestDriver6.pop();
        java.lang.Object obj47 = alejaStackTestDriver0.push(obj46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1.0d) + "'", obj5, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0d + "'", obj44, 1.0d);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0d + "'", obj45, 1.0d);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0d + "'", obj46, 1.0d);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0d + "'", obj47, 1.0d);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1596");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj38 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1597");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = alejaStackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver23.push(obj29);
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver39.getClass();
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver12.push(obj47);
        java.lang.Object obj49 = alejaStackTestDriver12.pop();
        java.lang.Object obj50 = alejaStackTestDriver12.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj55 = alejaStackTestDriver52.push((java.lang.Object) (-1.0d));
        java.lang.Object obj56 = alejaStackTestDriver52.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) 10L);
        java.lang.Object obj71 = alejaStackTestDriver57.push((java.lang.Object) (short) -1);
        alejaStackTestDriver57.clear();
        java.lang.Object obj73 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0f) + "'", obj33, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1.0d) + "'", obj55, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1.0d) + "'", obj56, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) -1 + "'", obj71, (short) -1);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1598");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 10L);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver64.clear();
        java.lang.Object obj77 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj79 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj80 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10L + "'", obj44, 10L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1599");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj31 = alejaStackTestDriver18.pop();
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) (byte) 0);
        java.lang.Object obj46 = alejaStackTestDriver33.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = alejaStackTestDriver47.push((java.lang.Object) false);
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver58.push(obj64);
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        java.lang.Object obj79 = alejaStackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver74.getClass();
        java.lang.Object obj82 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = alejaStackTestDriver47.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver33.push(obj82);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver33.getClass();
        java.lang.Object obj86 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = alejaStackTestDriver18.push((java.lang.Object) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = alejaStackTestDriver18.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 0 + "'", obj45, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 0 + "'", obj46, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100 + "'", obj88, 100);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1600");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 0.0d);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver32.push(obj53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Object obj69 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver59.clear();
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver76.clear();
        java.lang.Object obj89 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver73.clear();
        java.lang.Object obj91 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj93 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1601");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver35.pop();
        java.lang.Object obj43 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver12.push(obj43);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) 0.0d);
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj77 = alejaStackTestDriver55.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver47.push(obj77);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        java.lang.Object obj84 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver79);
        alejaStackTestDriver79.clear();
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver79.getClass();
        java.lang.Object obj87 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj88 = alejaStackTestDriver12.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1602");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1603");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver28.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver43.push(obj49);
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver59.getClass();
        java.lang.Object obj67 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass66);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver68.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj82 = alejaStackTestDriver68.pop();
        java.lang.Object obj83 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver84.getClass();
        java.lang.Object obj91 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver28.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj94 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1.0f) + "'", obj53, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "hi!" + "'", obj75, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1604");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver13.push(obj19);
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) "");
        java.lang.Object obj35 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver29.getClass();
        java.lang.Object obj37 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        java.lang.Object obj53 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj66 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj67 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0f) + "'", obj23, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1605");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1606");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = alejaStackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver29.push(obj35);
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver45.getClass();
        java.lang.Object obj53 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver18.push(obj53);
        java.lang.Object obj55 = alejaStackTestDriver12.push(obj53);
        alejaStackTestDriver12.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1607");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver69.getClass();
        java.lang.Object obj78 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj79 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0d + "'", obj76, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1608");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1609");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = alejaStackTestDriver26.push(obj61);
        java.lang.Object obj63 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1610");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 10L);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) (short) 1);
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver61.pop();
        java.lang.Object obj75 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver76.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        java.lang.Object obj89 = alejaStackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = alejaStackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj93 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj94 = alejaStackTestDriver39.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver39.pop();
        java.lang.Object obj96 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver39.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 1 + "'", obj52, (short) 1);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1611");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) 0.0d);
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass55);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = alejaStackTestDriver43.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver35.push(obj65);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj73 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        java.lang.Object obj79 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver35.push(obj79);
        java.lang.Object obj81 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj84 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver35);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1612");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = alejaStackTestDriver11.push((java.lang.Object) false);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver21.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj34 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = alejaStackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj37 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj42 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver28.clear();
        java.lang.Object obj44 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver28.getClass();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1613");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1.0f) + "'", obj11, (-1.0f));
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1614");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj61 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj62 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj66 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1615");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        java.lang.Object obj57 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1616");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver11.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver11.pop();
        java.lang.Object obj58 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = alejaStackTestDriver11.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1617");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver13.push(obj19);
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) "");
        java.lang.Object obj35 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver29.getClass();
        java.lang.Object obj37 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        java.lang.Object obj53 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj66 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver68.clear();
        java.lang.Object obj76 = alejaStackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj77 = alejaStackTestDriver68.pop();
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj80 = alejaStackTestDriver13.push(obj79);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0f) + "'", obj23, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1 + "'", obj76, 1);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1 + "'", obj77, 1);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1 + "'", obj79, 1);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1 + "'", obj80, 1);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1618");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        java.lang.Object obj38 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver54.clear();
        java.lang.Object obj67 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver69.pop();
        java.lang.Object obj83 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj84 = alejaStackTestDriver40.push(obj83);
        java.lang.Object obj85 = alejaStackTestDriver0.push(obj84);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0f) + "'", obj38, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1619");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 10L);
        java.lang.Object obj68 = alejaStackTestDriver54.push((java.lang.Object) 0L);
        java.lang.Object obj69 = alejaStackTestDriver41.push(obj68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj94 = alejaStackTestDriver41.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10L + "'", obj66, 10L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0L + "'", obj68, 0L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0L + "'", obj69, 0L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1620");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj28 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 0 + "'", obj13, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1621");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver41.getClass();
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver52.clear();
        java.lang.Object obj65 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver49.clear();
        java.lang.Object obj67 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = alejaStackTestDriver25.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1622");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj55 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 0.0d);
        alejaStackTestDriver56.clear();
        java.lang.Object obj66 = alejaStackTestDriver56.push((java.lang.Object) 1.0d);
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver68.clear();
        java.lang.Object obj76 = alejaStackTestDriver68.push((java.lang.Object) 1);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Object obj78 = alejaStackTestDriver68.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver56.push(obj77);
        alejaStackTestDriver56.clear();
        java.lang.Object obj81 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver56.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0d + "'", obj66, 1.0d);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1 + "'", obj76, 1);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1623");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver26.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver35.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = alejaStackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj51 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver42);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver52.getClass();
        java.lang.Object obj57 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1624");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass7);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj16);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj46 = alejaStackTestDriver39.pop();
        java.lang.Object obj47 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver67.pop();
        java.lang.Object obj75 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver80.clear();
        java.lang.Object obj93 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj94 = alejaStackTestDriver67.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver39.push(obj94);
        java.lang.Object obj96 = alejaStackTestDriver39.pop();
        java.lang.Object obj97 = alejaStackTestDriver0.push(obj96);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1625");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 0.0d);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver32.push(obj53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1626");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push(obj14);
        java.lang.Object obj18 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver24.getClass();
        java.lang.Object obj32 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver33.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver33.pop();
        java.lang.Object obj48 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver49.getClass();
        java.lang.Object obj56 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        alejaStackTestDriver60.clear();
        java.lang.Object obj73 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver57.clear();
        java.lang.Object obj75 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj78 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "hi!" + "'", obj40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1627");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1628");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 10L);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj42 = alejaStackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj43 = alejaStackTestDriver30.push(obj42);
        alejaStackTestDriver30.clear();
        java.lang.Object obj45 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver30.push(obj49);
        java.lang.Object obj52 = alejaStackTestDriver0.push(obj51);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1629");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver64.push(obj70);
        java.lang.Object obj74 = alejaStackTestDriver64.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver80.getClass();
        java.lang.Object obj88 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver53.push(obj88);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver53.getClass();
        java.lang.Object obj91 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass90);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1.0f) + "'", obj63, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1630");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        java.lang.Object obj42 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj43 = alejaStackTestDriver16.pop();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 0 + "'", obj28, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1631");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver11.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1632");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver37.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj55 = alejaStackTestDriver0.push(obj54);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) 10L);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj73 = alejaStackTestDriver57.push((java.lang.Object) 1.0d);
        java.lang.Object obj74 = alejaStackTestDriver57.pop();
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver57.getClass();
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 1 + "'", obj13, (short) 1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0d + "'", obj73, 1.0d);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0d + "'", obj74, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1633");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        java.lang.Object obj11 = alejaStackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver19.clear();
        java.lang.Object obj32 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver5.push(obj48);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver5.clear();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0f) + "'", obj15, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1634");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj26 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) 100L);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver54.pop();
        java.lang.Object obj62 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj63 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj64 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj65 = alejaStackTestDriver16.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1635");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj48 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj49 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1636");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver41.getClass();
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver52.clear();
        java.lang.Object obj65 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver49.clear();
        java.lang.Object obj67 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1637");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver80.clear();
        java.lang.Object obj93 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj94 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1638");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj31 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1639");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = alejaStackTestDriver42.push((java.lang.Object) false);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass55);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj74 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj83 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver42.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1640");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) '4');
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj82 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        java.lang.Object obj84 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj85 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = alejaStackTestDriver29.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + '4' + "'", obj79, '4');
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1641");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver46.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj67 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver79.clear();
        java.lang.Object obj92 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj93 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj94 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj95 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj96 = alejaStackTestDriver0.push(obj95);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1 + "'", obj69, 1);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1642");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver30.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = alejaStackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver47.getClass();
        java.lang.Object obj52 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver61.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver61.getClass();
        java.lang.Object obj76 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver30.getClass();
        java.lang.Object obj80 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0d) + "'", obj25, (-1.0d));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "hi!" + "'", obj68, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1643");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1644");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) "hi!");
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "hi!" + "'", obj23, "hi!");
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1645");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1646");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = alejaStackTestDriver29.pop();
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj44 = alejaStackTestDriver0.push(obj43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver48.clear();
        java.lang.Object obj61 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver64.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        java.lang.Object obj77 = alejaStackTestDriver71.push((java.lang.Object) 100L);
        java.lang.Object obj79 = alejaStackTestDriver71.push((java.lang.Object) false);
        java.lang.Object obj80 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj85 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj88 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100L + "'", obj77, 100L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1647");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver33.push((java.lang.Object) 0.0d);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj55 = alejaStackTestDriver33.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver25.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver57.clear();
        java.lang.Object obj65 = alejaStackTestDriver57.push((java.lang.Object) 1);
        java.lang.Object obj66 = alejaStackTestDriver25.push(obj65);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver25.getClass();
        java.lang.Object obj70 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass69);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0.0d + "'", obj40, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1648");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1649");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = alejaStackTestDriver42.push((java.lang.Object) false);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass55);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj74 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj83 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1650");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver43.getClass();
        java.lang.Object obj58 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver34.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver34.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = alejaStackTestDriver34.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1651");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        java.lang.Object obj11 = alejaStackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver19.clear();
        java.lang.Object obj32 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver5.push(obj48);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj51 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0f) + "'", obj15, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1652");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj63 = alejaStackTestDriver56.pop();
        java.lang.Object obj64 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj65 = alejaStackTestDriver43.pop();
        java.lang.Object obj66 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        java.lang.Object obj90 = alejaStackTestDriver84.push((java.lang.Object) 100L);
        java.lang.Object obj91 = alejaStackTestDriver77.push(obj90);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        java.lang.Object obj96 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver43.clear();
        java.lang.Class<?> wildcardClass98 = alejaStackTestDriver43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "hi!" + "'", obj76, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1653");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver51.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver26.push(obj90);
        alejaStackTestDriver26.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1654");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) (short) 1);
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver27.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj62 = alejaStackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = alejaStackTestDriver56.push((java.lang.Object) false);
        java.lang.Object obj65 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj66 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj67 = alejaStackTestDriver12.push(obj66);
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver76.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver76.getClass();
        java.lang.Object obj91 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver69.getClass();
        java.lang.Object obj93 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 1 + "'", obj25, (short) 1);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1655");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1656");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 10L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) "");
        java.lang.Object obj54 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver43.clear();
        java.lang.Object obj56 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj58 = alejaStackTestDriver34.pop();
        java.lang.Object obj59 = alejaStackTestDriver21.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver21.pop();
        java.lang.Object obj61 = alejaStackTestDriver3.push(obj60);
        java.lang.Object obj62 = alejaStackTestDriver3.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10L + "'", obj33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1657");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push(obj22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver25.push(obj31);
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver41.getClass();
        java.lang.Object obj49 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver50.pop();
        java.lang.Object obj65 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver66.getClass();
        java.lang.Object obj73 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = alejaStackTestDriver16.push(obj73);
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) -1 + "'", obj14, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1658");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        java.lang.Object obj52 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj53 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1659");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver10.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = alejaStackTestDriver17.push((java.lang.Object) false);
        java.lang.Object obj26 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj31 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver17.clear();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1660");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = alejaStackTestDriver41.push(obj50);
        alejaStackTestDriver41.clear();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = alejaStackTestDriver41.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1661");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver19.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1662");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj34 = alejaStackTestDriver27.pop();
        java.lang.Object obj35 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj52 = alejaStackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = alejaStackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver56.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass66);
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver72.clear();
        java.lang.Object obj85 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj86 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj87 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver56.getClass();
        java.lang.Object obj89 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver56);
        alejaStackTestDriver27.clear();
        java.lang.Object obj91 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj92 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1 + "'", obj62, 1);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1663");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj70 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1664");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj26 = alejaStackTestDriver19.pop();
        java.lang.Object obj27 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 10L);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj59);
        alejaStackTestDriver47.clear();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver47.push(obj66);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj72 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1665");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj40 = alejaStackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = alejaStackTestDriver34.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) 10.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1666");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver25.push(obj31);
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver41.getClass();
        java.lang.Object obj49 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver50.pop();
        java.lang.Object obj65 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver66.getClass();
        java.lang.Object obj73 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj75 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1667");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver71.clear();
        java.lang.Object obj84 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        java.lang.Object obj86 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1668");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver25.clear();
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj55 = alejaStackTestDriver41.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver41.push(obj69);
        alejaStackTestDriver41.clear();
        java.lang.Object obj72 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "hi!" + "'", obj48, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "hi!" + "'", obj63, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1669");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        java.lang.Object obj63 = alejaStackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = alejaStackTestDriver57.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver71.getClass();
        java.lang.Object obj81 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver71.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1670");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver50.getClass();
        java.lang.Object obj63 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver3.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1671");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 10L);
        java.lang.Object obj52 = alejaStackTestDriver38.push((java.lang.Object) 0L);
        java.lang.Object obj53 = alejaStackTestDriver25.push(obj52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver61.pop();
        java.lang.Object obj75 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj76 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj77 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj79 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0L + "'", obj52, 0L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0L + "'", obj53, 0L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1672");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = alejaStackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push(obj55);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver65.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver38.push(obj73);
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj76 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0f) + "'", obj59, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1673");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = alejaStackTestDriver29.push((java.lang.Object) false);
        java.lang.Object obj38 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj51 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver60.push((java.lang.Object) 0.0d);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver60.push(obj81);
        java.lang.Object obj83 = alejaStackTestDriver52.push(obj82);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver84.clear();
        java.lang.Object obj92 = alejaStackTestDriver84.push((java.lang.Object) 1);
        java.lang.Object obj93 = alejaStackTestDriver52.push(obj92);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        java.lang.Object obj96 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver52);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0.0d + "'", obj67, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1 + "'", obj92, 1);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1 + "'", obj93, 1);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1674");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1675");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 10L);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver64.clear();
        java.lang.Object obj77 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj79 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj80 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj82 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10L + "'", obj44, 10L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1676");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) "");
        java.lang.Object obj37 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj38 = alejaStackTestDriver31.pop();
        java.lang.Object obj39 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        java.lang.Object obj41 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj42 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) 10L);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 100L);
        java.lang.Object obj72 = alejaStackTestDriver59.push(obj71);
        alejaStackTestDriver59.clear();
        java.lang.Object obj74 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = alejaStackTestDriver59.push(obj78);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        java.lang.Object obj83 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver59.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10L + "'", obj55, 10L);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1677");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1678");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1679");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver7.getClass();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 10L);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) 0L);
        java.lang.Object obj47 = alejaStackTestDriver19.push(obj46);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver49.getClass();
        java.lang.Object obj62 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = alejaStackTestDriver0.push(obj63);
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10L + "'", obj44, 10L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0L + "'", obj46, 0L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0L + "'", obj47, 0L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1680");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 1);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver26.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver43.getClass();
        java.lang.Object obj48 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver57.getClass();
        java.lang.Object obj72 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver26.clear();
        java.lang.Object obj75 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver17.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1681");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver71.clear();
        java.lang.Object obj84 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        java.lang.Object obj86 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1682");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver16.clear();
        java.lang.Object obj29 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj31);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1683");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1684");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = alejaStackTestDriver39.push((java.lang.Object) false);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver67.pop();
        java.lang.Object obj75 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver80.clear();
        java.lang.Object obj93 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj94 = alejaStackTestDriver67.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver39.push(obj93);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver39.getClass();
        java.lang.Object obj97 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj98 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1685");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 10L);
        java.lang.Object obj52 = alejaStackTestDriver38.push((java.lang.Object) 0L);
        java.lang.Object obj53 = alejaStackTestDriver25.push(obj52);
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0L + "'", obj52, 0L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0L + "'", obj53, 0L);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1686");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100L);
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) false);
        java.lang.Object obj18 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver19.push(obj25);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver35.getClass();
        java.lang.Object obj43 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver8.push(obj43);
        java.lang.Object obj45 = alejaStackTestDriver8.pop();
        java.lang.Object obj46 = alejaStackTestDriver0.push(obj45);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1.0f) + "'", obj29, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1687");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver34.clear();
        java.lang.Object obj47 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver25.pop();
        java.lang.Object obj50 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver51.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver68.clear();
        java.lang.Object obj81 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj82 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        java.lang.Object obj87 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1688");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        java.lang.Object obj25 = alejaStackTestDriver18.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver26.push((java.lang.Object) 0.0d);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver26.push(obj47);
        java.lang.Object obj49 = alejaStackTestDriver18.push(obj48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj75 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver65.clear();
        java.lang.Object obj78 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj86 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj87 = alejaStackTestDriver0.push(obj86);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0d + "'", obj33, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1689");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1690");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj55 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) (byte) 1);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 1 + "'", obj57, (byte) 1);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1691");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj31 = alejaStackTestDriver18.pop();
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver3.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1692");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj54 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = alejaStackTestDriver46.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1693");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver23.clear();
        java.lang.Object obj36 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj37 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj38 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver39.push(obj45);
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver55.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj78 = alejaStackTestDriver64.pop();
        java.lang.Object obj79 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        alejaStackTestDriver80.clear();
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver80.getClass();
        java.lang.Object obj87 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj89 = alejaStackTestDriver14.pop();
        java.lang.Object obj90 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1.0f) + "'", obj49, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "hi!" + "'", obj71, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1694");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj63 = alejaStackTestDriver56.pop();
        java.lang.Object obj64 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj65 = alejaStackTestDriver43.pop();
        java.lang.Object obj66 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj67 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1695");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver23.clear();
        java.lang.Object obj36 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj37 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj38 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver39.push(obj45);
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver55.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj78 = alejaStackTestDriver64.pop();
        java.lang.Object obj79 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        alejaStackTestDriver80.clear();
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver80.getClass();
        java.lang.Object obj87 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj89 = alejaStackTestDriver14.pop();
        java.lang.Object obj90 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj90);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1.0f) + "'", obj49, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "hi!" + "'", obj71, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1696");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0d) + "'", obj25, (-1.0d));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1697");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver23.getClass();
        java.lang.Object obj36 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1698");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj26 = alejaStackTestDriver19.pop();
        java.lang.Object obj27 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 10L);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj59);
        alejaStackTestDriver47.clear();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver47.push(obj66);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1699");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        java.lang.Object obj4 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1.0d) + "'", obj4, (-1.0d));
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1700");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj26 = alejaStackTestDriver19.pop();
        java.lang.Object obj27 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 10L);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj59);
        alejaStackTestDriver47.clear();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver47.push(obj66);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1701");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver16.clear();
        java.lang.Object obj29 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj31);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1702");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver41.getClass();
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1703");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver36.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj50 = alejaStackTestDriver36.pop();
        java.lang.Object obj51 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver36);
        alejaStackTestDriver36.clear();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver73.pop();
        java.lang.Object obj81 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj83 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj84 = alejaStackTestDriver54.pop();
        java.lang.Object obj85 = alejaStackTestDriver36.push(obj84);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1 + "'", obj9, 1);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1704");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver35.pop();
        java.lang.Object obj43 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver12.push(obj43);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1705");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) "hi!");
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver29.push(obj35);
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver45.getClass();
        java.lang.Object obj53 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver54.pop();
        java.lang.Object obj69 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) "");
        java.lang.Object obj81 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj82 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj83 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver75);
        alejaStackTestDriver75.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver75.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "hi!" + "'", obj61, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1706");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver32.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = alejaStackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj53 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver55.getClass();
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj83 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver65.getClass();
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj86 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "hi!" + "'", obj76, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1707");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1708");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver34.clear();
        java.lang.Object obj47 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver31.clear();
        java.lang.Object obj49 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver51.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 100L);
        java.lang.Object obj66 = alejaStackTestDriver58.push((java.lang.Object) false);
        java.lang.Object obj67 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        java.lang.Object obj81 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver74);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        java.lang.Object obj90 = alejaStackTestDriver87.pop();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) "");
        java.lang.Object obj93 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver87.pop();
        java.lang.Object obj95 = alejaStackTestDriver74.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj96 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj97 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass99 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 100L + "'", obj64, 100L);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "" + "'", obj92, "");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + "" + "'", obj94, "");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1709");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver29.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1710");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1711");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj24 = alejaStackTestDriver12.push((java.lang.Object) 10L);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver12.getClass();
        java.lang.Object obj30 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10L + "'", obj24, 10L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0d + "'", obj28, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1712");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) 10L);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj45 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver49);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj69 = alejaStackTestDriver62.pop();
        java.lang.Object obj70 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver62.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver62.getClass();
        java.lang.Object obj73 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10L + "'", obj41, 10L);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1713");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1714");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver51.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver26.push(obj90);
        java.lang.Object obj93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver26.push(obj93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1715");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1716");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 0.0d);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver32.push(obj53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Object obj69 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver59.clear();
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver76.clear();
        java.lang.Object obj89 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver73.clear();
        java.lang.Object obj91 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1717");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver30.getClass();
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj52 = alejaStackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = alejaStackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1.0f) + "'", obj56, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1718");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 0.0d);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj33 = alejaStackTestDriver11.push(obj32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass35);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) 10.0f);
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) '4');
        java.lang.Object obj53 = alejaStackTestDriver40.pop();
        java.lang.Object obj54 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver3.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0d + "'", obj18, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 10.0f + "'", obj47, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + '4' + "'", obj52, '4');
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + '4' + "'", obj53, '4');
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1719");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) -1 + "'", obj14, (short) -1);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1720");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj20 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj22 = alejaStackTestDriver10.push((java.lang.Object) (byte) 0);
        java.lang.Object obj23 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver36.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver36.getClass();
        java.lang.Object obj51 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver27.push(obj51);
        java.lang.Object obj53 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 0 + "'", obj22, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 0 + "'", obj23, (byte) 0);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1721");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 0.0d);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj36 = alejaStackTestDriver14.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver3.push(obj36);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver39.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver47.getClass();
        java.lang.Object obj58 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "hi!" + "'", obj46, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1722");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 10.0f);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver23.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver30.pop();
        java.lang.Object obj44 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver45.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver52.push((java.lang.Object) false);
        java.lang.Object obj61 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj62 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver30.getClass();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10.0f + "'", obj19, 10.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1723");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver16.clear();
        java.lang.Object obj29 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj31);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver43.getClass();
        java.lang.Object obj52 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver36.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1724");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) '4');
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1725");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj64 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1726");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = alejaStackTestDriver12.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj33 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver26.getClass();
        java.lang.Object obj36 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj38 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1727");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj36 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = alejaStackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push(obj55);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver65.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver38.push(obj73);
        alejaStackTestDriver38.clear();
        java.lang.Object obj76 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver31.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = alejaStackTestDriver31.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0f) + "'", obj59, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1728");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 10.0f);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) (byte) 0);
        java.lang.Object obj82 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj84 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 0 + "'", obj81, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 0 + "'", obj82, (byte) 0);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1729");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) '4');
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver29.clear();
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver29.getClass();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1730");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = alejaStackTestDriver26.push(obj61);
        alejaStackTestDriver26.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1731");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = alejaStackTestDriver11.push((java.lang.Object) false);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver21.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj34 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = alejaStackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj37 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj42 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver28.clear();
        java.lang.Object obj44 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver28.getClass();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver48.clear();
        java.lang.Object obj56 = alejaStackTestDriver48.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver57.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj77 = alejaStackTestDriver64.pop();
        java.lang.Object obj78 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj79 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1 + "'", obj56, 1);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) -1 + "'", obj83, (byte) -1);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1732");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 10L);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj31 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver14.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj53 = alejaStackTestDriver40.push((java.lang.Object) (short) 1);
        java.lang.Object obj54 = alejaStackTestDriver35.push((java.lang.Object) (short) 1);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) 0.0d);
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass76);
        alejaStackTestDriver73.clear();
        alejaStackTestDriver73.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj86 = alejaStackTestDriver64.push(obj85);
        java.lang.Object obj87 = alejaStackTestDriver56.push(obj86);
        java.lang.Object obj88 = alejaStackTestDriver56.pop();
        java.lang.Object obj89 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj90 = alejaStackTestDriver35.pop();
        java.lang.Object obj91 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0d + "'", obj31, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 1 + "'", obj53, (short) 1);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 1 + "'", obj54, (short) 1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0d + "'", obj71, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1733");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1734");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver16.push(obj28);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1735");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver9.push(obj21);
        java.lang.Object obj24 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver0.push(obj24);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver30.clear();
        java.lang.Object obj43 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver46.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj67 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj70 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver53.push(obj76);
        java.lang.Object obj79 = alejaStackTestDriver0.push(obj78);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1736");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver7.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj21 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver22.push(obj28);
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver38.getClass();
        java.lang.Object obj46 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj61 = alejaStackTestDriver47.pop();
        java.lang.Object obj62 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver63.getClass();
        java.lang.Object obj70 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver7.push(obj70);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "hi!" + "'", obj14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (-1.0f) + "'", obj32, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1737");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push(obj14);
        java.lang.Object obj18 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver24.getClass();
        java.lang.Object obj32 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver33.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver33.pop();
        java.lang.Object obj48 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver49.getClass();
        java.lang.Object obj56 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        alejaStackTestDriver60.clear();
        java.lang.Object obj73 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver57.clear();
        java.lang.Object obj75 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "hi!" + "'", obj40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1738");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) 1);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 1 + "'", obj28, (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1739");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        java.lang.Object obj11 = alejaStackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver19.clear();
        java.lang.Object obj32 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver5.push(obj48);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0f) + "'", obj15, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1740");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1741");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver34.clear();
        java.lang.Object obj47 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver25.pop();
        java.lang.Object obj50 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver16.clear();
        java.lang.Object obj53 = alejaStackTestDriver16.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver56.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass66);
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = alejaStackTestDriver63.pop();
        java.lang.Object obj77 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj78 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj79 = alejaStackTestDriver56.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        alejaStackTestDriver83.clear();
        alejaStackTestDriver83.clear();
        java.lang.Object obj90 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj92 = alejaStackTestDriver83.push((java.lang.Object) 10L);
        java.lang.Object obj93 = alejaStackTestDriver83.pop();
        java.lang.Object obj94 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver83);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) -1 + "'", obj53, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 10L + "'", obj92, 10L);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 10L + "'", obj93, 10L);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1742");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver11.clear();
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1743");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj19 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver35.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj55 = alejaStackTestDriver42.pop();
        java.lang.Object obj56 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj57 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj58 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver20.getClass();
        java.lang.Object obj61 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "hi!" + "'", obj27, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1744");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj17 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1745");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 10L);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = alejaStackTestDriver42.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver51.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver51.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        java.lang.Object obj71 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver66.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver51.push(obj79);
        java.lang.Object obj81 = alejaStackTestDriver42.push(obj79);
        alejaStackTestDriver42.clear();
        java.lang.Object obj83 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver25.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "hi!" + "'", obj73, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1746");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) 0.0d);
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj49 = alejaStackTestDriver36.push(obj48);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj65 = alejaStackTestDriver59.push((java.lang.Object) 100L);
        java.lang.Object obj67 = alejaStackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj69 = alejaStackTestDriver59.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver70.push(obj76);
        java.lang.Object obj80 = alejaStackTestDriver70.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        alejaStackTestDriver81.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        java.lang.Object obj89 = alejaStackTestDriver86.pop();
        java.lang.Object obj91 = alejaStackTestDriver86.push((java.lang.Object) "");
        java.lang.Object obj92 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver86.getClass();
        java.lang.Object obj94 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = alejaStackTestDriver59.push(obj94);
        java.lang.Object obj96 = alejaStackTestDriver53.push(obj94);
        java.lang.Object obj97 = alejaStackTestDriver0.push(obj96);
        java.lang.Class<?> wildcardClass98 = obj96.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0d + "'", obj32, 0.0d);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1.0f) + "'", obj69, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1.0f) + "'", obj80, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "" + "'", obj91, "");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1747");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj26 = alejaStackTestDriver16.push((java.lang.Object) '4');
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) 10L);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj44 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10L + "'", obj13, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + '4' + "'", obj26, '4');
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10L + "'", obj41, 10L);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1748");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1749");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        java.lang.Object obj11 = alejaStackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver19.clear();
        java.lang.Object obj32 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver34.pop();
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver5.push(obj48);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0f) + "'", obj15, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1750");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass6 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1751");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = alejaStackTestDriver29.pop();
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj44 = alejaStackTestDriver0.push(obj43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver48.clear();
        java.lang.Object obj61 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver64.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        java.lang.Object obj77 = alejaStackTestDriver71.push((java.lang.Object) 100L);
        java.lang.Object obj79 = alejaStackTestDriver71.push((java.lang.Object) false);
        java.lang.Object obj80 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj85 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj88 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass89);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100L + "'", obj77, 100L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1752");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) 10.0f);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 10L);
        java.lang.Object obj48 = alejaStackTestDriver34.push((java.lang.Object) 0L);
        java.lang.Object obj49 = alejaStackTestDriver21.push(obj48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver50.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = alejaStackTestDriver57.pop();
        java.lang.Object obj71 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj72 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj75 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver50);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 10.0f + "'", obj16, 10.0f);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10L + "'", obj46, 10L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0L + "'", obj49, 0L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1753");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver23.push((java.lang.Object) 0.0d);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver23.push(obj44);
        java.lang.Object obj46 = alejaStackTestDriver15.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) (byte) 0);
        java.lang.Object obj63 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) "");
        java.lang.Object obj76 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj77 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj78 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj79 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0d + "'", obj30, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Class");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 0 + "'", obj62, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 0 + "'", obj63, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1754");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 0.0d);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj36 = alejaStackTestDriver14.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver3.push(obj36);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver42);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver55.pop();
        java.lang.Object obj63 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver68.clear();
        java.lang.Object obj81 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj82 = alejaStackTestDriver55.push(obj81);
        java.lang.Object obj83 = alejaStackTestDriver55.pop();
        java.lang.Object obj84 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1755");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1756");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj54 = alejaStackTestDriver46.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver71.pop();
        java.lang.Object obj79 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver71.clear();
        java.lang.Object obj81 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver82.push((java.lang.Object) 10.0f);
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj93 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver82.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1757");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver16.clear();
        java.lang.Object obj29 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj31);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1758");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = alejaStackTestDriver29.push(obj56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        alejaStackTestDriver80.clear();
        alejaStackTestDriver80.clear();
        java.lang.Object obj87 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) 10L);
        java.lang.Object obj91 = alejaStackTestDriver77.push((java.lang.Object) (short) -1);
        java.lang.Object obj92 = alejaStackTestDriver77.pop();
        java.lang.Object obj93 = alejaStackTestDriver77.pop();
        java.lang.Object obj94 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj95 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = alejaStackTestDriver29.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "hi!" + "'", obj56, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10L + "'", obj89, 10L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) -1 + "'", obj91, (short) -1);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) -1 + "'", obj92, (short) -1);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 10L + "'", obj93, 10L);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1759");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = alejaStackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1760");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj50 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver3.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1761");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj63 = alejaStackTestDriver55.push((java.lang.Object) 1);
        java.lang.Object obj64 = alejaStackTestDriver55.pop();
        java.lang.Object obj66 = alejaStackTestDriver55.push((java.lang.Object) 1);
        java.lang.Object obj67 = alejaStackTestDriver0.push(obj66);
        java.lang.Object obj68 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1 + "'", obj63, 1);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1 + "'", obj64, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1 + "'", obj67, 1);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1 + "'", obj68, 1);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1762");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver3.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 10.0f);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) '4');
        java.lang.Object obj65 = alejaStackTestDriver42.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj67 = alejaStackTestDriver42.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = alejaStackTestDriver42.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + '4' + "'", obj64, '4');
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + '4' + "'", obj65, '4');
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + '4' + "'", obj67, '4');
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1763");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver11.clear();
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        alejaStackTestDriver11.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver11.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1764");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj49 = alejaStackTestDriver41.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver50.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = alejaStackTestDriver57.pop();
        java.lang.Object obj71 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj72 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj73 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1 + "'", obj49, 1);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1765");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver61.pop();
        java.lang.Object obj75 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver76.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        java.lang.Object obj89 = alejaStackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = alejaStackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj93 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver76.clear();
        java.lang.Object obj95 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver76);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1766");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver30.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver30.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver45.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver45.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver61.getClass();
        java.lang.Object obj69 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver70.pop();
        java.lang.Object obj85 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        java.lang.Object obj89 = alejaStackTestDriver86.pop();
        alejaStackTestDriver86.clear();
        alejaStackTestDriver86.clear();
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver86.getClass();
        java.lang.Object obj93 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver30.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver0.push(obj94);
        java.lang.Object obj96 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1.0f) + "'", obj55, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "hi!" + "'", obj77, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1767");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver36);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1768");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver26.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        java.lang.Object obj41 = alejaStackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = alejaStackTestDriver35.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver49.getClass();
        java.lang.Object obj59 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Object obj70 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj71 = alejaStackTestDriver26.push(obj70);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0d + "'", obj61, 1.0d);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1769");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 0.0d);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver32.push(obj53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Object obj69 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver59.clear();
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver76.clear();
        java.lang.Object obj89 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver73.clear();
        java.lang.Object obj91 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1770");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 10L);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver64.clear();
        java.lang.Object obj77 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver61.clear();
        java.lang.Object obj79 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj80 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj82 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10L + "'", obj44, 10L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1771");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj43 = alejaStackTestDriver16.push(obj42);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1772");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver38.getClass();
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1773");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj36 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver37.push(obj43);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver53.getClass();
        java.lang.Object obj61 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver62.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj76 = alejaStackTestDriver62.pop();
        java.lang.Object obj77 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver78.getClass();
        java.lang.Object obj85 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver31.push(obj85);
        java.lang.Object obj87 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1.0f) + "'", obj47, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "hi!" + "'", obj69, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1774");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 1);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver26.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver43.getClass();
        java.lang.Object obj48 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver57.getClass();
        java.lang.Object obj72 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver26.clear();
        java.lang.Object obj75 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1775");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = alejaStackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver17.push(obj23);
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver33.getClass();
        java.lang.Object obj41 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver6.push(obj41);
        java.lang.Object obj43 = alejaStackTestDriver0.push(obj41);
        java.lang.Object obj44 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 10L);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver46.push(obj73);
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj76 = alejaStackTestDriver46.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1.0f) + "'", obj27, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10L + "'", obj58, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1776");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) '4');
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj29 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver46.pop();
        java.lang.Object obj54 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj65 = alejaStackTestDriver59.push((java.lang.Object) 100L);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Object obj91 = alejaStackTestDriver84.pop();
        java.lang.Object obj92 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Object obj93 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj94 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj95 = alejaStackTestDriver46.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + '4' + "'", obj25, '4');
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 100L + "'", obj65, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + "" + "'", obj91, "");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1777");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver51.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver26.push(obj90);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1778");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver17.getClass();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 0.0d);
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = alejaStackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = alejaStackTestDriver59.push(obj80);
        java.lang.Object obj82 = alejaStackTestDriver32.push(obj81);
        java.lang.Object obj83 = alejaStackTestDriver0.push(obj82);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0d + "'", obj66, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1779");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 10L);
        java.lang.Object obj68 = alejaStackTestDriver54.push((java.lang.Object) 0L);
        java.lang.Object obj69 = alejaStackTestDriver41.push(obj68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj94 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10L + "'", obj66, 10L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0L + "'", obj68, 0L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0L + "'", obj69, 0L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1780");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) "hi!");
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj37 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        java.lang.Object obj56 = alejaStackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = alejaStackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver61.push(obj67);
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver77.getClass();
        java.lang.Object obj85 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver50.push(obj85);
        java.lang.Object obj87 = alejaStackTestDriver50.pop();
        java.lang.Object obj88 = alejaStackTestDriver50.pop();
        java.lang.Object obj89 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj90 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj91 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj93 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver26);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "hi!" + "'", obj24, "hi!");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1.0f) + "'", obj60, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1.0f) + "'", obj71, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (-1.0f) + "'", obj88, (-1.0f));
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1781");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver17.getClass();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver31.getClass();
        java.lang.Object obj46 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj48 = alejaStackTestDriver24.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "hi!" + "'", obj38, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1782");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver2.clear();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        java.lang.Object obj6 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver2.clear();
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver9.getClass();
        java.lang.Object obj24 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.push(obj24);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1783");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver78.getClass();
        java.lang.Object obj91 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj92 = alejaStackTestDriver16.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1784");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1785");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver0.push(obj18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) 10L);
        java.lang.Object obj47 = alejaStackTestDriver33.push((java.lang.Object) 0L);
        java.lang.Object obj48 = alejaStackTestDriver20.push(obj47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = alejaStackTestDriver56.pop();
        java.lang.Object obj70 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj71 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 0 + "'", obj13, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10L + "'", obj45, 10L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0L + "'", obj47, 0L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1786");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver10.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver10.push(obj38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver51.push(obj57);
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver67.getClass();
        java.lang.Object obj75 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver40.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver10.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = alejaStackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "hi!" + "'", obj17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1787");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = alejaStackTestDriver24.push((java.lang.Object) false);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = alejaStackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj55 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver41.clear();
        java.lang.Object obj57 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver24.clear();
        java.lang.Object obj59 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj60 = alejaStackTestDriver7.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = alejaStackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1788");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) (byte) 0);
        java.lang.Object obj27 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = alejaStackTestDriver14.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) 10L);
        java.lang.Object obj61 = alejaStackTestDriver47.push((java.lang.Object) 0L);
        java.lang.Object obj62 = alejaStackTestDriver34.push(obj61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver63.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = alejaStackTestDriver70.pop();
        java.lang.Object obj84 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj85 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj89 = alejaStackTestDriver14.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 0 + "'", obj26, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 0 + "'", obj27, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10L + "'", obj59, 10L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0L + "'", obj61, 0L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0L + "'", obj62, 0L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1789");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj39 = alejaStackTestDriver32.pop();
        java.lang.Object obj40 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) 10.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) '4');
        java.lang.Object obj55 = alejaStackTestDriver32.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + '4' + "'", obj54, '4');
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + '4' + "'", obj55, '4');
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1790");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver7.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver7.getClass();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0d + "'", obj14, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1791");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1792");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj63 = alejaStackTestDriver56.pop();
        java.lang.Object obj64 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj65 = alejaStackTestDriver43.pop();
        java.lang.Object obj66 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        java.lang.Object obj90 = alejaStackTestDriver84.push((java.lang.Object) 100L);
        java.lang.Object obj91 = alejaStackTestDriver77.push(obj90);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        java.lang.Object obj96 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj97 = alejaStackTestDriver43.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = alejaStackTestDriver43.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "hi!" + "'", obj76, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1793");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver24.push(obj30);
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver40.getClass();
        java.lang.Object obj48 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj63 = alejaStackTestDriver49.pop();
        java.lang.Object obj64 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver49);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver65.getClass();
        java.lang.Object obj72 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver9.push(obj72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj80 = alejaStackTestDriver74.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver81.getClass();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver9.push(obj86);
        java.lang.Object obj88 = alejaStackTestDriver0.push(obj86);
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1.0d) + "'", obj5, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "hi!" + "'", obj56, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1794");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj56 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "hi!" + "'", obj49, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1795");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push(obj22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver25.push(obj31);
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver41.getClass();
        java.lang.Object obj49 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver50.pop();
        java.lang.Object obj65 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver66.getClass();
        java.lang.Object obj73 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = alejaStackTestDriver16.push(obj73);
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) -1 + "'", obj14, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1796");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver11.push(obj17);
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver27.getClass();
        java.lang.Object obj35 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        alejaStackTestDriver0.clear();
        java.lang.Object obj39 = alejaStackTestDriver0.push((java.lang.Object) ' ');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0f) + "'", obj21, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + ' ' + "'", obj39, ' ');
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1797");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver21.pop();
        java.lang.Object obj29 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver39.clear();
        java.lang.Object obj52 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj53 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj54 = alejaStackTestDriver30.pop();
        java.lang.Object obj55 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver21.clear();
        java.lang.Object obj58 = alejaStackTestDriver21.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver60.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj74 = alejaStackTestDriver60.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver75.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = alejaStackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver60.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver60.pop();
        java.lang.Object obj91 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = alejaStackTestDriver0.push(obj91);
        java.lang.Class<?> wildcardClass94 = obj91.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "hi!" + "'", obj67, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1798");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver27.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj40 = alejaStackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = alejaStackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver44.getClass();
        java.lang.Object obj49 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver58.getClass();
        java.lang.Object obj73 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj75 = alejaStackTestDriver27.pop();
        java.lang.Object obj76 = alejaStackTestDriver0.push(obj75);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1799");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1800");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj36 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = alejaStackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push(obj55);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver65.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver38.push(obj73);
        alejaStackTestDriver38.clear();
        java.lang.Object obj76 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj77 = alejaStackTestDriver31.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = alejaStackTestDriver31.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0f) + "'", obj59, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1801");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver25.clear();
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass43 = alejaStackTestDriver25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1802");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver29.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1803");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) '4');
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 10L);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj53 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver38.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 0.0d);
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass68);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver56.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver56.pop();
        java.lang.Object obj80 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + '4' + "'", obj35, '4');
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1804");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) (short) 1);
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) (short) 1);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) 0.0d);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = alejaStackTestDriver42.push(obj63);
        java.lang.Object obj65 = alejaStackTestDriver34.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver34.pop();
        java.lang.Object obj67 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj68 = alejaStackTestDriver0.push(obj67);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 1 + "'", obj31, (short) 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 1 + "'", obj32, (short) 1);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0.0d + "'", obj49, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1805");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver21.clear();
        java.lang.Object obj34 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj35 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj36 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1806");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver15.push(obj21);
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) "");
        java.lang.Object obj37 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver31.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj54 = alejaStackTestDriver40.pop();
        java.lang.Object obj55 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver56.getClass();
        java.lang.Object obj63 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver67.clear();
        java.lang.Object obj80 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver64.clear();
        java.lang.Object obj82 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0f) + "'", obj25, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "hi!" + "'", obj47, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1807");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push(obj22);
        java.lang.Object obj26 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver16.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 0 + "'", obj13, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1808");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj40 = alejaStackTestDriver27.pop();
        java.lang.Object obj41 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver20.push(obj89);
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1809");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj50 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj51 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1810");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1811");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver38.clear();
        java.lang.Object obj51 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver35.clear();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1812");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        java.lang.Object obj52 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj53 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj54 = alejaStackTestDriver23.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj58 = alejaStackTestDriver55.push((java.lang.Object) (-1.0d));
        java.lang.Object obj59 = alejaStackTestDriver55.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        java.lang.Object obj70 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) 10L);
        java.lang.Object obj74 = alejaStackTestDriver60.push((java.lang.Object) (short) -1);
        alejaStackTestDriver60.clear();
        java.lang.Object obj76 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj77 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (-1.0d) + "'", obj58, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0d) + "'", obj59, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10L + "'", obj72, 10L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) -1 + "'", obj74, (short) -1);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1813");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver3.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 10.0f);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) '4');
        java.lang.Object obj65 = alejaStackTestDriver42.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = alejaStackTestDriver42.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + '4' + "'", obj64, '4');
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + '4' + "'", obj65, '4');
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1814");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) "hi!");
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1815");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 0.0d);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj33 = alejaStackTestDriver11.push(obj32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass35);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) 10.0f);
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) '4');
        java.lang.Object obj53 = alejaStackTestDriver40.pop();
        java.lang.Object obj54 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0d + "'", obj18, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 10.0f + "'", obj47, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + '4' + "'", obj52, '4');
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + '4' + "'", obj53, '4');
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1816");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver12.clear();
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = alejaStackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1817");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver46.pop();
        java.lang.Object obj54 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 10.0f);
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) '4');
        java.lang.Object obj69 = alejaStackTestDriver46.push(obj68);
        java.lang.Object obj70 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj71 = alejaStackTestDriver0.push(obj70);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "hi!" + "'", obj21, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + '4' + "'", obj68, '4');
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + '4' + "'", obj69, '4');
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1818");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass16);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver23.clear();
        java.lang.Object obj36 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj37 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver39.push(obj48);
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = alejaStackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) "");
        java.lang.Object obj71 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj72 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver65.getClass();
        java.lang.Object obj75 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj76 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj77 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1819");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver21.pop();
        java.lang.Object obj29 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver39.clear();
        java.lang.Object obj52 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj53 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj54 = alejaStackTestDriver30.pop();
        java.lang.Object obj55 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver21.clear();
        java.lang.Object obj58 = alejaStackTestDriver21.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver60.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj74 = alejaStackTestDriver60.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver75.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = alejaStackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver60.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver60.pop();
        java.lang.Object obj91 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = alejaStackTestDriver0.push(obj91);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "hi!" + "'", obj67, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1820");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj32 = alejaStackTestDriver25.pop();
        java.lang.Object obj33 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        java.lang.Object obj56 = alejaStackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj57 = alejaStackTestDriver43.push(obj56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj84 = alejaStackTestDriver77.pop();
        java.lang.Object obj85 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj87 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj88 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj89 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1821");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) "hi!");
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver11.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "hi!" + "'", obj18, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1822");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1823");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1824");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver12.clear();
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj45 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver35.clear();
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver55.getClass();
        java.lang.Object obj64 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver12.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push(obj64);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1825");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = alejaStackTestDriver29.push((java.lang.Object) false);
        java.lang.Object obj38 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj40 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1826");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver57.pop();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver48.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = alejaStackTestDriver48.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "hi!" + "'", obj47, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Short");
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1827");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver2.clear();
        java.lang.Object obj4 = new java.lang.Object();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        java.lang.Object obj6 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver2.clear();
        alejaStackTestDriver2.clear();
        alejaStackTestDriver2.clear();
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj14 = alejaStackTestDriver11.push((java.lang.Object) (-1.0d));
        java.lang.Object obj15 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 10L);
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj34 = alejaStackTestDriver18.push((java.lang.Object) 1.0d);
        alejaStackTestDriver18.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0d) + "'", obj15, (-1.0d));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10L + "'", obj30, 10L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0d + "'", obj34, 1.0d);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1828");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        java.lang.Object obj52 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj53 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver23.push(obj54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1829");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 10L);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) 10L);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = alejaStackTestDriver24.push(obj51);
        java.lang.Object obj53 = alejaStackTestDriver9.push(obj52);
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        java.lang.Object obj55 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10L + "'", obj21, 10L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10L + "'", obj36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1830");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver15.clear();
        java.lang.Object obj23 = alejaStackTestDriver15.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver24.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass34);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver31.pop();
        java.lang.Object obj45 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) 10L);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver65);
        alejaStackTestDriver62.clear();
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver79.clear();
        java.lang.Object obj92 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver79);
        alejaStackTestDriver76.clear();
        java.lang.Object obj94 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj95 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj96 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass97);
        java.lang.Object obj99 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) -1 + "'", obj14, (short) -1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10L + "'", obj59, 10L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1831");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver29.pop();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver29.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1832");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1833");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj31 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1834");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1835");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver17.getClass();
        java.lang.Object obj26 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj27 = alejaStackTestDriver0.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) (byte) 0);
        java.lang.Object obj41 = alejaStackTestDriver28.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj52 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj56 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver42);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        java.lang.Object obj63 = alejaStackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = alejaStackTestDriver57.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver71.getClass();
        java.lang.Object obj81 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj83 = alejaStackTestDriver57.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        java.lang.Object obj92 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Object obj93 = alejaStackTestDriver57.pop();
        java.lang.Object obj94 = alejaStackTestDriver42.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver42.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.push(obj95);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0d + "'", obj24, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 0 + "'", obj40, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 0 + "'", obj41, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0d + "'", obj83, 1.0d);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1836");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj63 = alejaStackTestDriver56.pop();
        java.lang.Object obj64 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj65 = alejaStackTestDriver43.pop();
        java.lang.Object obj66 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1837");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver10.clear();
        java.lang.Object obj23 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver7.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1838");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver16.push(obj28);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver16.push(obj35);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) 0.0d);
        alejaStackTestDriver41.clear();
        java.lang.Object obj51 = alejaStackTestDriver41.push((java.lang.Object) 1.0d);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj55 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0.0d + "'", obj48, 0.0d);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0d + "'", obj51, 1.0d);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1839");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 10L);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver49.pop();
        java.lang.Object obj57 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj58 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj61 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1840");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1841");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver25.push(obj31);
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver41.getClass();
        java.lang.Object obj49 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver50.pop();
        java.lang.Object obj65 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver66.getClass();
        java.lang.Object obj73 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        alejaStackTestDriver75.clear();
        java.lang.Object obj81 = alejaStackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) false);
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        java.lang.Object obj89 = alejaStackTestDriver86.pop();
        java.lang.Object obj91 = alejaStackTestDriver86.push((java.lang.Object) (short) 10);
        java.lang.Object obj93 = alejaStackTestDriver86.push((java.lang.Object) "hi!");
        java.lang.Object obj94 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj95 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver75);
        alejaStackTestDriver75.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + "hi!" + "'", obj93, "hi!");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1842");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj50 = alejaStackTestDriver43.pop();
        java.lang.Object obj51 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = alejaStackTestDriver53.push((java.lang.Object) 10.0f);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) '4');
        java.lang.Object obj66 = alejaStackTestDriver43.push(obj65);
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        java.lang.Object obj79 = alejaStackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj81 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver74.getClass();
        java.lang.Object obj83 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass82);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        alejaStackTestDriver84.clear();
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver84.getClass();
        java.lang.Object obj93 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver84);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + '4' + "'", obj65, '4');
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + '4' + "'", obj66, '4');
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Character");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Character");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Character");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1843");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver25.push(obj31);
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) "");
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver41.getClass();
        java.lang.Object obj49 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver50.pop();
        java.lang.Object obj65 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver66.getClass();
        java.lang.Object obj73 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj75 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1844");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver80.clear();
        java.lang.Object obj93 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj94 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver70.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = alejaStackTestDriver70.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1845");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver46.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) false);
        java.lang.Object obj62 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj67 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver79.clear();
        java.lang.Object obj92 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj93 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj94 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj95 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj96 = alejaStackTestDriver0.push(obj95);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass98 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1 + "'", obj69, 1);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1846");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 10L);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj31 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver14.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver34.getClass();
        java.lang.Object obj50 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver34);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0d + "'", obj31, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1847");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1848");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj50 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj51 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1849");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj61 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj62 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1850");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1.0f) + "'", obj11, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1851");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj34 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = alejaStackTestDriver28.push((java.lang.Object) false);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver47.clear();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass65);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver28.getClass();
        java.lang.Object obj70 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass74);
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) 1.0f);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        java.lang.Object obj89 = alejaStackTestDriver84.push((java.lang.Object) "");
        java.lang.Object obj90 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver71.push(obj90);
        java.lang.Class<?> wildcardClass93 = obj90.getClass();
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1852");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        java.lang.Object obj15 = alejaStackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.push(obj24);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1853");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1854");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Object obj82 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj84 = alejaStackTestDriver72.push((java.lang.Object) 10L);
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        java.lang.Object obj88 = alejaStackTestDriver72.push((java.lang.Object) 1.0d);
        java.lang.Object obj89 = alejaStackTestDriver72.pop();
        java.lang.Object obj90 = alejaStackTestDriver0.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10L + "'", obj84, 10L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0d + "'", obj88, 1.0d);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0d + "'", obj89, 1.0d);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0d + "'", obj90, 1.0d);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0d + "'", obj91, 1.0d);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1855");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj24 = alejaStackTestDriver16.push((java.lang.Object) 1);
        java.lang.Object obj25 = alejaStackTestDriver16.pop();
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver3.push((java.lang.Object) 1);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 10L + "'", obj15, 10L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1 + "'", obj24, 1);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1 + "'", obj25, 1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1856");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) '4');
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 10L);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj53 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver38.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + '4' + "'", obj35, '4');
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10L + "'", obj50, 10L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1857");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver47.getClass();
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1858");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver12.getClass();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj44 = alejaStackTestDriver30.push(obj43);
        java.lang.Object obj45 = alejaStackTestDriver0.push(obj44);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver47.push(obj53);
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver63.getClass();
        java.lang.Object obj71 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver72.pop();
        java.lang.Object obj87 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj90 = alejaStackTestDriver88.push((java.lang.Object) 1.0f);
        java.lang.Object obj91 = alejaStackTestDriver88.pop();
        alejaStackTestDriver88.clear();
        alejaStackTestDriver88.clear();
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver88.getClass();
        java.lang.Object obj95 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = alejaStackTestDriver0.push(obj95);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0d + "'", obj19, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "hi!" + "'", obj29, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "hi!" + "'", obj79, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1859");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver11.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver11.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1860");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 0.0d);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj33 = alejaStackTestDriver11.push(obj32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass43);
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) '4');
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        java.lang.Object obj53 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = alejaStackTestDriver40.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0d + "'", obj18, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + '4' + "'", obj50, '4');
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1861");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj23 = alejaStackTestDriver16.push((java.lang.Object) 10.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) '4');
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj51 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver44.getClass();
        java.lang.Object obj54 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj56 = alejaStackTestDriver30.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj65 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver16.clear();
        java.lang.Object obj68 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver16);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + '4' + "'", obj28, '4');
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0d + "'", obj56, 1.0d);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1862");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver46.clear();
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver43.clear();
        java.lang.Object obj61 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj62 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver12.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver67.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj80 = alejaStackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj82 = alejaStackTestDriver74.push((java.lang.Object) false);
        java.lang.Object obj83 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver74.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1863");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver31.getClass();
        java.lang.Object obj46 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver22.push(obj46);
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "hi!" + "'", obj38, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Class");
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1864");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver34.clear();
        java.lang.Object obj47 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj48 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj49 = alejaStackTestDriver25.pop();
        java.lang.Object obj50 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver16.clear();
        java.lang.Object obj53 = alejaStackTestDriver16.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) -1 + "'", obj53, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1865");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj45 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver35.clear();
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1866");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj49 = alejaStackTestDriver41.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver50.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass60);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = alejaStackTestDriver57.pop();
        java.lang.Object obj71 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj72 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj73 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1 + "'", obj49, 1);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1867");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1868");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver11.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1869");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = alejaStackTestDriver15.push(obj21);
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) "");
        java.lang.Object obj37 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver31.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj54 = alejaStackTestDriver40.pop();
        java.lang.Object obj55 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver56.getClass();
        java.lang.Object obj63 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver67.clear();
        java.lang.Object obj80 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver64.clear();
        java.lang.Object obj82 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0f) + "'", obj25, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "hi!" + "'", obj47, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1870");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj40 = alejaStackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = alejaStackTestDriver34.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) 10.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1871");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj38 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver54.getClass();
        java.lang.Object obj64 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj66 = alejaStackTestDriver40.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Object obj75 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver40.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0d + "'", obj66, 1.0d);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1872");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver80.clear();
        java.lang.Object obj93 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj94 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj96 = alejaStackTestDriver0.pop();
        java.lang.Object obj97 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1873");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj47 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj48 = alejaStackTestDriver24.pop();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver17.push(obj48);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj62 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver63.push((java.lang.Object) 0.0d);
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj85 = alejaStackTestDriver63.push(obj84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver0.push(obj89);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0L + "'", obj14, 0L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1874");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver11.clear();
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj34 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = alejaStackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj52 = alejaStackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = alejaStackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver57.push(obj63);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver73.getClass();
        java.lang.Object obj81 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver46.push(obj81);
        java.lang.Object obj83 = alejaStackTestDriver40.push(obj81);
        alejaStackTestDriver40.clear();
        java.lang.Object obj85 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj86 = alejaStackTestDriver28.pop();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver28);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0f) + "'", obj38, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1.0f) + "'", obj56, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (-1.0f) + "'", obj67, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1875");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        java.lang.Object obj52 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj53 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj54 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1876");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj32 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver33.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj55 = alejaStackTestDriver41.push(obj54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj59 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "hi!" + "'", obj40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1877");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj36 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver37.push(obj43);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver53.getClass();
        java.lang.Object obj61 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver62.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj76 = alejaStackTestDriver62.pop();
        java.lang.Object obj77 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver78.getClass();
        java.lang.Object obj85 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver31.push(obj85);
        java.lang.Object obj87 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1.0f) + "'", obj47, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "hi!" + "'", obj69, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1878");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj14 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1879");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver37.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj55 = alejaStackTestDriver0.push(obj54);
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 1 + "'", obj13, (short) 1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1880");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver24.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj38 = alejaStackTestDriver9.push(obj37);
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj37);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "hi!" + "'", obj16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "hi!" + "'", obj31, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1881");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver7.getClass();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver20.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Class<?> wildcardClass43 = alejaStackTestDriver36.getClass();
        java.lang.Object obj44 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver45.pop();
        java.lang.Object obj60 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver61.getClass();
        java.lang.Object obj68 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver72.clear();
        java.lang.Object obj85 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver69.clear();
        java.lang.Object obj87 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj88 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1.0f) + "'", obj30, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "hi!" + "'", obj52, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1882");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver57.clear();
        java.lang.Object obj70 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver73.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        java.lang.Object obj86 = alejaStackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = alejaStackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver80);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj94 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver90);
        alejaStackTestDriver80.clear();
        alejaStackTestDriver80.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj98 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver80);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1883");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver14.push(obj20);
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        java.lang.Object obj38 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver39.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver39.pop();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj67 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj82 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1.0f) + "'", obj24, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "hi!" + "'", obj46, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1884");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 0.0d);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj33 = alejaStackTestDriver11.push(obj32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) 10L);
        java.lang.Object obj54 = alejaStackTestDriver40.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver55.push(obj61);
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver71.getClass();
        java.lang.Object obj79 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj83 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0d + "'", obj18, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10L + "'", obj52, 10L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) -1 + "'", obj54, (short) -1);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1885");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.pop();
        java.lang.Object obj56 = alejaStackTestDriver0.pop();
        java.lang.Object obj57 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1886");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = alejaStackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver40.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver26.clear();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj64 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj75 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) 10L);
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj80 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10L + "'", obj77, 10L);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1887");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver41.getClass();
        java.lang.Object obj50 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0.0d + "'", obj48, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Float");
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1888");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 10L);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj31 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver14.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10L + "'", obj26, 10L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0d + "'", obj31, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1889");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = alejaStackTestDriver29.push((java.lang.Object) 10.0f);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) (byte) 0);
        java.lang.Object obj52 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj54 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver65.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver65.getClass();
        java.lang.Object obj80 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver56.push(obj80);
        java.lang.Object obj82 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver39.getClass();
        java.lang.Object obj84 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass83);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 0 + "'", obj51, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 0 + "'", obj52, (byte) 0);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "hi!" + "'", obj72, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1890");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100L);
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) false);
        java.lang.Object obj18 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver19.push(obj25);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver35.getClass();
        java.lang.Object obj43 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver8.push(obj43);
        java.lang.Object obj45 = alejaStackTestDriver8.pop();
        java.lang.Object obj46 = alejaStackTestDriver0.push(obj45);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1.0f) + "'", obj29, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1891");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1892");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        java.lang.Object obj46 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) 10L);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver51.clear();
        java.lang.Object obj64 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver68.clear();
        java.lang.Object obj81 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver65.clear();
        java.lang.Object obj83 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj84 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10L + "'", obj48, 10L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1893");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) 10L);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver45.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver52.push((java.lang.Object) false);
        java.lang.Object obj61 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj66 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj67 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = alejaStackTestDriver69.push(obj78);
        alejaStackTestDriver69.clear();
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver69.getClass();
        java.lang.Object obj82 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver69);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1894");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) 10.0f);
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj35 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver37.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj76 = alejaStackTestDriver69.pop();
        java.lang.Object obj77 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        java.lang.Object obj84 = alejaStackTestDriver79.push((java.lang.Object) (byte) 100);
        java.lang.Object obj86 = alejaStackTestDriver79.push((java.lang.Object) 10.0f);
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        java.lang.Object obj91 = alejaStackTestDriver79.push((java.lang.Object) '4');
        java.lang.Object obj92 = alejaStackTestDriver69.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj94 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj95 = alejaStackTestDriver37.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver37.clear();
        java.lang.Class<?> wildcardClass98 = alejaStackTestDriver37.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 0 + "'", obj32, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 0 + "'", obj33, (byte) 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "hi!" + "'", obj44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + '4' + "'", obj91, '4');
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + '4' + "'", obj92, '4');
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1895");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) 10L);
        java.lang.Object obj38 = alejaStackTestDriver24.push((java.lang.Object) 0L);
        java.lang.Object obj39 = alejaStackTestDriver11.push(obj38);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        java.lang.Object obj51 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver41.clear();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver41.getClass();
        java.lang.Object obj54 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) 0.0d);
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj67 = alejaStackTestDriver57.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        java.lang.Object obj81 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        alejaStackTestDriver68.clear();
        java.lang.Object obj83 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver68.getClass();
        java.lang.Object obj85 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj86 = alejaStackTestDriver0.push(obj85);
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10L + "'", obj36, 10L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0L + "'", obj38, 0L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0L + "'", obj39, 0L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0d + "'", obj64, 0.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1896");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj32 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver33.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj55 = alejaStackTestDriver41.push(obj54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj59 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = alejaStackTestDriver41.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "hi!" + "'", obj40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1897");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver60.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "hi!" + "'", obj77, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1898");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        java.lang.Object obj63 = alejaStackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = alejaStackTestDriver57.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver71.getClass();
        java.lang.Object obj81 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1899");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Object obj17 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) 10L);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj39 = alejaStackTestDriver7.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj41 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10L + "'", obj34, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1900");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver11.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = alejaStackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1901");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver27.push(obj33);
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver43.getClass();
        java.lang.Object obj51 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver27.pop();
        java.lang.Object obj53 = alejaStackTestDriver27.pop();
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver56.push(obj62);
        java.lang.Object obj66 = alejaStackTestDriver56.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver72.getClass();
        java.lang.Object obj80 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass79);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) (short) 10);
        java.lang.Object obj88 = alejaStackTestDriver81.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver89.clear();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = alejaStackTestDriver89.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj95 = alejaStackTestDriver81.pop();
        java.lang.Object obj96 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass97);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1.0f) + "'", obj53, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1.0f) + "'", obj54, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1902");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj26 = alejaStackTestDriver19.pop();
        java.lang.Object obj27 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1903");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) 0.0d);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver25.push(obj46);
        java.lang.Object obj48 = alejaStackTestDriver17.push(obj47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj55 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        java.lang.Object obj66 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver56.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver56.getClass();
        java.lang.Object obj69 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj70 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver83.clear();
        java.lang.Object obj86 = alejaStackTestDriver83.push((java.lang.Object) (-1.0d));
        java.lang.Object obj87 = alejaStackTestDriver83.pop();
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj90 = alejaStackTestDriver72.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver0.push(obj90);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0d + "'", obj32, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (-1.0d) + "'", obj86, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (-1.0d) + "'", obj87, (-1.0d));
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1904");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = alejaStackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver23.push(obj29);
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) "");
        java.lang.Object obj45 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver39.getClass();
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver12.push(obj47);
        java.lang.Object obj49 = alejaStackTestDriver12.pop();
        java.lang.Object obj50 = alejaStackTestDriver12.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0f) + "'", obj33, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1905");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj40 = alejaStackTestDriver33.pop();
        java.lang.Object obj41 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj43 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver47.push(obj53);
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver63.getClass();
        java.lang.Object obj71 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver72.pop();
        java.lang.Object obj87 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver47.clear();
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver47.getClass();
        java.lang.Object obj90 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "hi!" + "'", obj79, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1906");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass51);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 10L);
        java.lang.Object obj68 = alejaStackTestDriver54.push((java.lang.Object) 0L);
        java.lang.Object obj69 = alejaStackTestDriver41.push(obj68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver70.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass80);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver77.pop();
        java.lang.Object obj91 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj92 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj94 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10L + "'", obj66, 10L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0L + "'", obj68, 0L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0L + "'", obj69, 0L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1907");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj12 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 10L);
        java.lang.Object obj29 = alejaStackTestDriver15.push((java.lang.Object) (short) -1);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass34);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) '4');
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        java.lang.Object obj56 = alejaStackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = alejaStackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        java.lang.Object obj70 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver60.clear();
        java.lang.Object obj73 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver77.clear();
        java.lang.Object obj90 = alejaStackTestDriver74.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver74.clear();
        java.lang.Object obj92 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj93 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver43.getClass();
        java.lang.Object obj95 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = alejaStackTestDriver31.pop();
        java.lang.Object obj97 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj98 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj99 = alejaStackTestDriver5.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) -1 + "'", obj29, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + '4' + "'", obj41, '4');
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1908");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver48.pop();
        java.lang.Object obj62 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj63 = alejaStackTestDriver19.push(obj62);
        java.lang.Object obj64 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass69);
        alejaStackTestDriver66.clear();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver66.pop();
        java.lang.Object obj80 = alejaStackTestDriver19.push(obj79);
        alejaStackTestDriver19.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1.0f) + "'", obj29, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1909");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) "");
        java.lang.Object obj81 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver75);
        alejaStackTestDriver70.clear();
        java.lang.Object obj83 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj84 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj85 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1910");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = alejaStackTestDriver24.push((java.lang.Object) false);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = alejaStackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj55 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver41.clear();
        java.lang.Object obj57 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver24.clear();
        java.lang.Object obj59 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver60.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver74.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 10L);
        alejaStackTestDriver74.clear();
        alejaStackTestDriver74.clear();
        java.lang.Object obj90 = alejaStackTestDriver74.push((java.lang.Object) 1.0d);
        java.lang.Object obj91 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver74.getClass();
        java.lang.Object obj93 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver60.getClass();
        java.lang.Object obj95 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver60.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "hi!" + "'", obj67, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10L + "'", obj86, 10L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0d + "'", obj90, 1.0d);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0d + "'", obj91, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1911");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver11.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver11.pop();
        java.lang.Object obj58 = alejaStackTestDriver11.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 0.0d);
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj80 = alejaStackTestDriver74.push((java.lang.Object) 100L);
        java.lang.Object obj81 = alejaStackTestDriver68.push(obj80);
        java.lang.Object obj83 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver59.push(obj83);
        java.lang.Object obj85 = alejaStackTestDriver59.pop();
        java.lang.Object obj86 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver59.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0d + "'", obj66, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100L + "'", obj80, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1912");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj22 = alejaStackTestDriver8.push(obj21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj46 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver23.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        java.lang.Object obj58 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver48.clear();
        java.lang.Object obj61 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj63 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj64 = alejaStackTestDriver8.push(obj63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1913");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1914");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver33.clear();
        java.lang.Object obj46 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj48 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1915");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 10L);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver15.push(obj42);
        java.lang.Object obj44 = alejaStackTestDriver0.push(obj43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) 10L);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10L + "'", obj57, 10L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10L + "'", obj58, 10L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1916");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        java.lang.Object obj4 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj17 = alejaStackTestDriver5.push((java.lang.Object) 10L);
        java.lang.Object obj19 = alejaStackTestDriver5.push((java.lang.Object) (short) -1);
        alejaStackTestDriver5.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj22 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1.0d) + "'", obj4, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10L + "'", obj17, 10L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) -1 + "'", obj19, (short) -1);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1917");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1918");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver3.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver17.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = alejaStackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj38 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver34.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver50.clear();
        java.lang.Object obj63 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj64 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj65 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj66 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver67.clear();
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver67.getClass();
        java.lang.Object obj75 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj76 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1 + "'", obj40, 1);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1919");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = alejaStackTestDriver7.push(obj13);
        java.lang.Object obj17 = alejaStackTestDriver7.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver23.getClass();
        java.lang.Object obj31 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj46 = alejaStackTestDriver32.pop();
        java.lang.Object obj47 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver48.getClass();
        java.lang.Object obj55 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver59.clear();
        java.lang.Object obj72 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver56.clear();
        java.lang.Object obj74 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj76 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "hi!" + "'", obj39, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1920");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Object obj5 = alejaStackTestDriver2.pop();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) '4');
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj30 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "hi!" + "'", obj9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + '4' + "'", obj27, '4');
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1921");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver16.clear();
        java.lang.Object obj29 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj31);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        java.lang.Object obj45 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj58 = alejaStackTestDriver51.pop();
        java.lang.Object obj59 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj60 = alejaStackTestDriver38.pop();
        java.lang.Object obj61 = alejaStackTestDriver0.push(obj60);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1922");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver16.pop();
        java.lang.Object obj30 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj32 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1923");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) 10L);
        java.lang.Object obj76 = alejaStackTestDriver62.push((java.lang.Object) 0L);
        java.lang.Object obj77 = alejaStackTestDriver49.push(obj76);
        alejaStackTestDriver49.clear();
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = alejaStackTestDriver49.push(obj80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10L + "'", obj74, 10L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0L + "'", obj76, 0L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0L + "'", obj77, 0L);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1924");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1925");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver36.push(obj42);
        java.lang.Object obj46 = alejaStackTestDriver36.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver52.getClass();
        java.lang.Object obj60 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver61.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver61.pop();
        java.lang.Object obj76 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver77.getClass();
        java.lang.Object obj84 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass83);
        alejaStackTestDriver27.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = alejaStackTestDriver27.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1.0f) + "'", obj46, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "hi!" + "'", obj68, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1926");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver27.getClass();
        java.lang.Object obj33 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver41.getClass();
        java.lang.Object obj50 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver27.push(obj55);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0.0d + "'", obj48, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Float");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1927");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = alejaStackTestDriver26.push((java.lang.Object) 10.0f);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Object obj38 = alejaStackTestDriver26.push((java.lang.Object) '4');
        java.lang.Object obj39 = alejaStackTestDriver16.push(obj38);
        java.lang.Object obj40 = alejaStackTestDriver16.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + '4' + "'", obj38, '4');
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + '4' + "'", obj39, '4');
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + '4' + "'", obj40, '4');
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1928");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1929");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1930");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver3.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver42.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 10.0f);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) '4');
        java.lang.Object obj65 = alejaStackTestDriver42.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj67 = alejaStackTestDriver42.pop();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver42.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + '4' + "'", obj64, '4');
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + '4' + "'", obj65, '4');
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + '4' + "'", obj67, '4');
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1931");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1932");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass7);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj16);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver23.push((java.lang.Object) 0.0d);
        alejaStackTestDriver23.clear();
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) 1.0d);
        java.lang.Object obj34 = alejaStackTestDriver4.push(obj33);
        java.lang.Object obj35 = alejaStackTestDriver4.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0d + "'", obj30, 0.0d);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0d + "'", obj33, 1.0d);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0d + "'", obj34, 1.0d);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0d + "'", obj35, 1.0d);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1933");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver46.clear();
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver43.clear();
        java.lang.Object obj61 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj62 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver12.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1934");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) 10L);
        java.lang.Object obj42 = alejaStackTestDriver28.push((java.lang.Object) 0L);
        java.lang.Object obj43 = alejaStackTestDriver15.push(obj42);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver45.clear();
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver45.getClass();
        java.lang.Object obj58 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver15.pop();
        java.lang.Object obj60 = alejaStackTestDriver9.push(obj59);
        java.lang.Object obj61 = alejaStackTestDriver9.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10L + "'", obj40, 10L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0L + "'", obj42, 0L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0L + "'", obj43, 0L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1935");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) 10L);
        java.lang.Object obj76 = alejaStackTestDriver62.push((java.lang.Object) 0L);
        java.lang.Object obj77 = alejaStackTestDriver49.push(obj76);
        alejaStackTestDriver49.clear();
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) 'a');
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10L + "'", obj74, 10L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0L + "'", obj76, 0L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0L + "'", obj77, 0L);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 'a' + "'", obj81, 'a');
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1936");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj27 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj51 = alejaStackTestDriver44.pop();
        java.lang.Object obj52 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj53 = alejaStackTestDriver21.push(obj52);
        java.lang.Object obj54 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "hi!" + "'", obj20, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1937");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver14.push(obj20);
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        java.lang.Object obj38 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver39.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver39.pop();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj67 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        alejaStackTestDriver71.clear();
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj82 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) 0);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1.0f) + "'", obj24, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "hi!" + "'", obj46, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0 + "'", obj85, 0);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1938");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1939");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0d) + "'", obj25, (-1.0d));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1940");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver17.push((java.lang.Object) 1);
        java.lang.Object obj26 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj39 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1 + "'", obj25, 1);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1 + "'", obj26, 1);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1941");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Object obj13 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj26 = alejaStackTestDriver19.pop();
        java.lang.Object obj27 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 10L);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) 100L);
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj59);
        alejaStackTestDriver47.clear();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver47.push(obj66);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj71 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10L + "'", obj43, 10L);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1942");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver35.pop();
        java.lang.Object obj43 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj44 = alejaStackTestDriver12.push(obj43);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) 0.0d);
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) false);
        java.lang.Object obj57 = alejaStackTestDriver47.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        alejaStackTestDriver61.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj74 = alejaStackTestDriver12.push(obj73);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = alejaStackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "hi!" + "'", obj11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0d + "'", obj54, 0.0d);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1943");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass15);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1 + "'", obj9, 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1944");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        java.lang.Object obj33 = alejaStackTestDriver25.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj76 = alejaStackTestDriver69.pop();
        java.lang.Object obj77 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj78 = alejaStackTestDriver46.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj80 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj81 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1 + "'", obj33, 1);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "hi!" + "'", obj45, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1945");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        java.lang.Object obj67 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver71.clear();
        java.lang.Object obj84 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver68.clear();
        java.lang.Object obj86 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1946");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj35 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj36 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver40.clear();
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver55.pop();
        java.lang.Object obj69 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj70 = alejaStackTestDriver31.push(obj69);
        java.lang.Object obj71 = alejaStackTestDriver31.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1947");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver11.push(obj55);
        java.lang.Object obj57 = alejaStackTestDriver11.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj65 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj66 = alejaStackTestDriver11.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1948");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver28.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver41.clear();
        java.lang.Object obj54 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver28.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver0.push(obj54);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 10.0f);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) (byte) 0);
        java.lang.Object obj82 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj84 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 0 + "'", obj81, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 0 + "'", obj82, (byte) 0);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1949");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = alejaStackTestDriver29.push((java.lang.Object) false);
        java.lang.Object obj38 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj40 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver44.clear();
        java.lang.Object obj57 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        java.lang.Object obj66 = alejaStackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = alejaStackTestDriver60.push((java.lang.Object) false);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver71.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj84 = alejaStackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = alejaStackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver78);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj91 = alejaStackTestDriver60.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver41.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver22.push(obj91);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1950");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver16.pop();
        java.lang.Object obj24 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj38 = alejaStackTestDriver35.push((java.lang.Object) (-1.0d));
        java.lang.Object obj39 = alejaStackTestDriver35.pop();
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj41 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj87 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj89 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj90 = alejaStackTestDriver51.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = alejaStackTestDriver26.push(obj90);
        java.lang.Object obj93 = alejaStackTestDriver26.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0d) + "'", obj38, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1951");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 0.0d);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj36 = alejaStackTestDriver14.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver3.push(obj36);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver3.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1952");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver36.push((java.lang.Object) 0.0d);
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = alejaStackTestDriver36.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver28.push(obj58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj66 = alejaStackTestDriver15.push(obj65);
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 0 + "'", obj12, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 0 + "'", obj13, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0d + "'", obj43, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1953");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1954");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver46.clear();
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver43.clear();
        java.lang.Object obj61 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj62 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver12.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1955");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj64 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1956");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 0.0d);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj30 = alejaStackTestDriver8.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj50 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj51 = alejaStackTestDriver43.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0d + "'", obj15, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1957");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver17.getClass();
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver27.clear();
        java.lang.Object obj40 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj55 = alejaStackTestDriver42.pop();
        java.lang.Object obj56 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver42.getClass();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1958");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj25 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1959");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver22.pop();
        java.lang.Object obj36 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver37.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj55 = alejaStackTestDriver0.push(obj54);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) 10L);
        alejaStackTestDriver57.clear();
        alejaStackTestDriver57.clear();
        java.lang.Object obj73 = alejaStackTestDriver57.push((java.lang.Object) 1.0d);
        java.lang.Object obj74 = alejaStackTestDriver57.pop();
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver57.getClass();
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass75);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver77.getClass();
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 1 + "'", obj13, (short) 1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10L + "'", obj69, 10L);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0d + "'", obj73, 1.0d);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0d + "'", obj74, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1960");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver12.getClass();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj44 = alejaStackTestDriver30.push(obj43);
        java.lang.Object obj45 = alejaStackTestDriver0.push(obj44);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver47.push(obj53);
        java.lang.Object obj57 = alejaStackTestDriver47.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver63.getClass();
        java.lang.Object obj71 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver72.pop();
        java.lang.Object obj87 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj90 = alejaStackTestDriver88.push((java.lang.Object) 1.0f);
        java.lang.Object obj91 = alejaStackTestDriver88.pop();
        alejaStackTestDriver88.clear();
        alejaStackTestDriver88.clear();
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver88.getClass();
        java.lang.Object obj95 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = alejaStackTestDriver0.push(obj95);
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0d + "'", obj19, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "hi!" + "'", obj29, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "hi!" + "'", obj79, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1961");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 10L);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = alejaStackTestDriver30.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Object obj69 = alejaStackTestDriver62.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) 0.0d);
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj92 = alejaStackTestDriver70.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver62.push(obj92);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        java.lang.Object obj95 = alejaStackTestDriver30.push(obj93);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0d) + "'", obj25, (-1.0d));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10L + "'", obj42, 10L);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10.0f + "'", obj69, 10.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1962");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1963");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1964");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver0.push(obj28);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver32.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = alejaStackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj53 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) "");
        java.lang.Object obj76 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver65.clear();
        java.lang.Object obj78 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj79 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj80 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj81 = alejaStackTestDriver39.pop();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver0.push(obj81);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "hi!" + "'", obj22, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1965");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver19.push((java.lang.Object) 0.0d);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver19.push(obj40);
        java.lang.Object obj42 = alejaStackTestDriver11.push(obj41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj49 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver50.getClass();
        java.lang.Object obj63 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver50);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        alejaStackTestDriver68.clear();
        java.lang.Object obj75 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver65.clear();
        java.lang.Object obj78 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        java.lang.Object obj90 = alejaStackTestDriver87.pop();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) "");
        java.lang.Object obj93 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver87);
        alejaStackTestDriver82.clear();
        java.lang.Object obj95 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver79.clear();
        java.lang.Object obj97 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj98 = alejaStackTestDriver3.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10.0f + "'", obj18, 10.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0d + "'", obj26, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "" + "'", obj92, "");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1966");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        java.lang.Object obj15 = alejaStackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1967");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) "");
        java.lang.Object obj35 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj36 = alejaStackTestDriver29.pop();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver29.getClass();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1968");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver5.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) 0.0d);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver13.push(obj34);
        java.lang.Object obj36 = alejaStackTestDriver5.push(obj35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver37.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj58 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj59 = alejaStackTestDriver5.push(obj58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        java.lang.Object obj66 = alejaStackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver60.getClass();
        java.lang.Object obj68 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver0.push(obj68);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10.0f + "'", obj12, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0d + "'", obj20, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1969");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 1);
        java.lang.Object obj24 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = alejaStackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1 + "'", obj24, 1);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1970");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) 10L);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 0L);
        java.lang.Object obj28 = alejaStackTestDriver0.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0L + "'", obj27, 0L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0L + "'", obj28, 0L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1971");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1972");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 10L);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) 10L);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = alejaStackTestDriver24.push(obj51);
        java.lang.Object obj53 = alejaStackTestDriver9.push(obj52);
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10L + "'", obj21, 10L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10L + "'", obj36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1973");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) '4');
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver12.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver46.clear();
        java.lang.Object obj59 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver43.clear();
        java.lang.Object obj61 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj62 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver12.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + '4' + "'", obj10, '4');
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1974");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver9.push(obj15);
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        java.lang.Object obj49 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver50.getClass();
        java.lang.Object obj57 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver0.push(obj57);
        java.lang.Object obj60 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) 10L);
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver75.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        alejaStackTestDriver82.clear();
        java.lang.Object obj88 = alejaStackTestDriver82.push((java.lang.Object) 100L);
        java.lang.Object obj90 = alejaStackTestDriver82.push((java.lang.Object) false);
        java.lang.Object obj91 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver82);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver92 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj94 = alejaStackTestDriver92.push((java.lang.Object) 1.0f);
        alejaStackTestDriver92.clear();
        java.lang.Object obj96 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver92);
        java.lang.Object obj97 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver92);
        java.lang.Object obj98 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver92);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10L + "'", obj73, 10L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100L + "'", obj88, 100L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + false + "'", obj90, false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 1.0f + "'", obj94, 1.0f);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1975");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver16.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver25.pop();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver46.clear();
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        alejaStackTestDriver46.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = alejaStackTestDriver46.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1976");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass7);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj16);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Object obj22 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1977");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push(obj6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver10.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj39 = alejaStackTestDriver10.push(obj38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj50 = alejaStackTestDriver40.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver51.push(obj57);
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver67.getClass();
        java.lang.Object obj75 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver40.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver10.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "hi!" + "'", obj17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1978");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Object obj5 = alejaStackTestDriver2.pop();
        alejaStackTestDriver2.clear();
        java.lang.Object obj8 = alejaStackTestDriver2.push((java.lang.Object) 100L);
        alejaStackTestDriver2.clear();
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) "");
        java.lang.Object obj33 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj34 = alejaStackTestDriver27.pop();
        java.lang.Object obj35 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver37.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver54.clear();
        java.lang.Object obj67 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj68 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj69 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj70 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 100L + "'", obj8, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "hi!" + "'", obj44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1979");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver9.clear();
        java.lang.Object obj22 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj24 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver37.push((java.lang.Object) 0.0d);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass49);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver37.push(obj58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = alejaStackTestDriver0.push(obj63);
        java.lang.Object obj65 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj72 = alejaStackTestDriver66.push((java.lang.Object) 100L);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver73.getClass();
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver66.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver66.getClass();
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0d + "'", obj44, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1980");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1981");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver21.clear();
        java.lang.Object obj34 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver36.pop();
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver21.pop();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver53.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver60.pop();
        java.lang.Object obj74 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver78);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver86.clear();
        java.lang.Object obj88 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) 10L);
        java.lang.Object obj91 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver78);
        alejaStackTestDriver78.clear();
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver78.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10L + "'", obj90, 10L);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1982");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj12);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1983");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        java.lang.Object obj11 = alejaStackTestDriver5.push((java.lang.Object) 100L);
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver30.pop();
        java.lang.Object obj38 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj39 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj62 = alejaStackTestDriver48.push(obj61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj76 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = alejaStackTestDriver82.pop();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj89 = alejaStackTestDriver82.pop();
        java.lang.Object obj90 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver82.clear();
        java.lang.Object obj92 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj93 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj94 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "hi!" + "'", obj47, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1984");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver10.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = alejaStackTestDriver17.push((java.lang.Object) false);
        java.lang.Object obj26 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj31 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver17.clear();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver34.clear();
        java.lang.Object obj40 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver34);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1985");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver15.clear();
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver32.clear();
        java.lang.Object obj45 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver29.clear();
        java.lang.Object obj47 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) 10L);
        java.lang.Object obj76 = alejaStackTestDriver62.push((java.lang.Object) 0L);
        java.lang.Object obj77 = alejaStackTestDriver49.push(obj76);
        alejaStackTestDriver49.clear();
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = alejaStackTestDriver49.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10L + "'", obj74, 10L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0L + "'", obj76, 0L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0L + "'", obj77, 0L);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1986");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver9.clear();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj22 = alejaStackTestDriver0.push(obj21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1987");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj12 = alejaStackTestDriver5.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) 0.0d);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver13.push(obj34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = alejaStackTestDriver39.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver53.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver39.clear();
        java.lang.Object obj65 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        java.lang.Object obj76 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj77 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        alejaStackTestDriver81.clear();
        alejaStackTestDriver81.clear();
        alejaStackTestDriver81.clear();
        java.lang.Object obj88 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj90 = alejaStackTestDriver81.push((java.lang.Object) 10L);
        alejaStackTestDriver81.clear();
        alejaStackTestDriver81.clear();
        java.lang.Object obj93 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver69.getClass();
        java.lang.Object obj95 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = alejaStackTestDriver5.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0d + "'", obj20, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10L + "'", obj90, 10L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1988");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) 10.0f);
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) (byte) 0);
        java.lang.Object obj33 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj35 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver37.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) "");
        java.lang.Object obj75 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj76 = alejaStackTestDriver69.pop();
        java.lang.Object obj77 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        java.lang.Object obj84 = alejaStackTestDriver79.push((java.lang.Object) (byte) 100);
        java.lang.Object obj86 = alejaStackTestDriver79.push((java.lang.Object) 10.0f);
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        java.lang.Object obj91 = alejaStackTestDriver79.push((java.lang.Object) '4');
        java.lang.Object obj92 = alejaStackTestDriver69.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj94 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj95 = alejaStackTestDriver37.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj97 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 0 + "'", obj32, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 0 + "'", obj33, (byte) 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "hi!" + "'", obj44, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + '4' + "'", obj91, '4');
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + '4' + "'", obj92, '4');
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1989");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        java.lang.Object obj4 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj17 = alejaStackTestDriver5.push((java.lang.Object) 10L);
        java.lang.Object obj19 = alejaStackTestDriver5.push((java.lang.Object) (short) -1);
        alejaStackTestDriver5.clear();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) 10L);
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = alejaStackTestDriver5.push(obj34);
        java.lang.Object obj37 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1.0d) + "'", obj4, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10L + "'", obj17, 10L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) -1 + "'", obj19, (short) -1);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10L + "'", obj34, 10L);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10L + "'", obj36, 10L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1990");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass10);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver7.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver33.clear();
        java.lang.Object obj35 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 10L);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10L + "'", obj37, 10L);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1991");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) 10L);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 0.0d);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj36 = alejaStackTestDriver14.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver3.push(obj36);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver42);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver55.pop();
        java.lang.Object obj63 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver68.clear();
        java.lang.Object obj81 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj82 = alejaStackTestDriver55.push(obj81);
        java.lang.Object obj83 = alejaStackTestDriver55.pop();
        java.lang.Object obj84 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1992");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        alejaStackTestDriver0.clear();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = alejaStackTestDriver17.pop();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj24 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) 10L);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        java.lang.Object obj45 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver49);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj69 = alejaStackTestDriver62.pop();
        java.lang.Object obj70 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver62.clear();
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver62.getClass();
        java.lang.Object obj73 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10L + "'", obj41, 10L);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1993");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj10 = alejaStackTestDriver0.push(obj9);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = alejaStackTestDriver12.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj33 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver26.getClass();
        java.lang.Object obj36 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = alejaStackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 100 + "'", obj9, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1994");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = alejaStackTestDriver9.pop();
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver14.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver36.push(obj42);
        java.lang.Object obj46 = alejaStackTestDriver36.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) "");
        java.lang.Object obj58 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver52.getClass();
        java.lang.Object obj60 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver61.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver61.pop();
        java.lang.Object obj76 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver77.getClass();
        java.lang.Object obj84 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj86 = alejaStackTestDriver27.pop();
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0d + "'", obj26, 1.0d);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1.0f) + "'", obj46, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "hi!" + "'", obj68, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1995");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + false + "'", obj10, false);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1996");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = alejaStackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj21 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver23.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) false);
        java.lang.Object obj39 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj44 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver56.clear();
        java.lang.Object obj69 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj70 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj71 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj72 = alejaStackTestDriver17.push(obj71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        alejaStackTestDriver73.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = alejaStackTestDriver73.push((java.lang.Object) false);
        java.lang.Object obj83 = alejaStackTestDriver73.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver73.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = alejaStackTestDriver85.pop();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) (byte) 100);
        java.lang.Object obj92 = alejaStackTestDriver85.push((java.lang.Object) 10.0f);
        alejaStackTestDriver85.clear();
        alejaStackTestDriver85.clear();
        java.lang.Object obj95 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver85);
        java.lang.Object obj96 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver17.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1 + "'", obj46, 1);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1.0f) + "'", obj83, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) 100 + "'", obj90, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 10.0f + "'", obj92, 10.0f);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1997");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver21.pop();
        java.lang.Object obj29 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver39.clear();
        java.lang.Object obj52 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj53 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj54 = alejaStackTestDriver30.pop();
        java.lang.Object obj55 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver21.clear();
        java.lang.Object obj58 = alejaStackTestDriver21.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver60.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj74 = alejaStackTestDriver60.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver75.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = alejaStackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver60.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver60.pop();
        java.lang.Object obj91 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Object obj93 = alejaStackTestDriver0.push(obj91);
        java.lang.Object obj94 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "hi!" + "'", obj67, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1998");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj14 = alejaStackTestDriver8.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Object obj24 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj31 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + "hi!" + "'", obj7, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test1999");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = alejaStackTestDriver3.pop();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver3);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 10L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 10L);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver15.push(obj42);
        java.lang.Object obj44 = alejaStackTestDriver0.push(obj43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) 10L);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver63.push((java.lang.Object) 0.0d);
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver72.clear();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver72.clear();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj85 = alejaStackTestDriver63.push(obj84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass87);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        alejaStackTestDriver89.clear();
        alejaStackTestDriver89.clear();
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver89.getClass();
        java.lang.Object obj97 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj98 = alejaStackTestDriver45.push(obj97);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 10L + "'", obj12, 10L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10L + "'", obj27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10L + "'", obj57, 10L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10L + "'", obj58, 10L);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_3.test2000");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass3);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) (short) 1);
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (short) 1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = alejaStackTestDriver21.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver29.push((java.lang.Object) 0.0d);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver29.push(obj50);
        java.lang.Object obj52 = alejaStackTestDriver21.push(obj51);
        java.lang.Object obj53 = alejaStackTestDriver21.pop();
        java.lang.Object obj54 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 1 + "'", obj18, (short) 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 1 + "'", obj19, (short) 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0d + "'", obj36, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }
}

